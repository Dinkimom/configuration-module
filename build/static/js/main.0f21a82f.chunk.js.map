{"version":3,"sources":["shared/enums/EditorModes.ts","shared/components/Loader.tsx","shared/functions/formatCode.ts","shared/enums/ConfigurationElements.ts","shared/hooks/useEditorModes.ts","app/EditorModal/actions.ts","shared/components/ErrorMessage.tsx","app/Panel/actions.ts","app/interfaceElements/App/index.tsx","shared/constants/colors.ts","shared/constants/sizes.ts","app/interfaceElements/Page.tsx","shared/hooks/usePageContext.ts","shared/hooks/useFieldValue.ts","app/interfaceElements/ConnectedElement.tsx","app/interfaceElements/ArrowButton.tsx","app/interfaceElements/Content.tsx","app/interfaceElements/Footer.tsx","app/interfaceElements/Header.tsx","app/interfaceElements/ProgressBar.tsx","app/interfaceElements/RetryButton.tsx","app/interfaceElements/SelectableImage.tsx","app/CodeRender/index.jsx","app/configurationElements/ConfigurationElement.tsx","app/configurationElements/ConfigurationBlock/index.tsx","app/Panel/index.tsx","app/CodeEditor/actions.ts","app/HowTo/actions.ts","app/CodeEditor/index.tsx","shared/enums/RequestsEnum.ts","app/EditorModal/index.tsx","app/HowTo/index.tsx","app/Editor/index.tsx","app/Pagination/actions.ts","app/Pagination/index.tsx","app/Editors/actions.ts","app/Editors/index.tsx","app/PageWrapper/index.tsx","app/Panels/index.tsx","app/app.tsx","shared/constants/serverEntryPoint.ts","services/AbstractClient.ts","services/ApplicationsClient.ts","app/EditorModal/saga.ts","app/CodeEditor/saga.ts","app/Editors/saga.ts","app/Panel/saga.ts","services/SettingsClient.ts","middleware/saga.ts","shared/constants/codeExample.ts","app/CodeEditor/reducer.ts","app/EditorModal/reducer.ts","app/Editors/reducer.ts","app/HowTo/reducer.ts","app/Pagination/reducer.ts","app/Panel/reducer.ts","store/reducer.ts","index.tsx","store/store.ts"],"names":["EditorModes","Loader","text","Dimmer","active","inverted","size","content","ConfigurationElements","beautifyCode","require","html","formatCode","code","indent_size","indent_char","max_preserve_newlines","preserve_newlines","keep_array_indentation","break_chained_methods","indent_scripts","brace_style","space_before_conditional","unescape_strings","jslint_happy","end_with_newline","wrap_line_length","indent_inner_html","comma_first","e4x","indent_empty_lines","useEditorModes","_id","useParams","mode","undefined","create","edit","editorModalActions","payload","type","ErrorMessage","error","Segment","className","padded","basic","Message","negative","Header","panelActions","App","children","isInitialized","useSelector","state","panel","dispatch","useDispatch","useEffect","colors","value","label","color","empty","circular","sizes","PageContext","React","createContext","page","Page","name","isPageInitialized","Boolean","settings","pages","currentPage","initPage","useCallback","Provider","usePageContext","useContext","useFieldValue","initialParams","common","params","ConnectedElement","optional","focusedField","isElementInitialized","elementParams","initComponent","useState","isOpen","setOpened","component","Popup","trigger","onOpen","onClose","open","ArrowButton","direction","other","Error","options","icon","Icon","select","Button","String","Content","attached","Footer","ProgressBar","Progress","percent","RetryButton","SelectableImage","loading","setLoading","src","setSrc","Image","map","item","image","newSrc","compact","onLoad","onError","style","opacity","CodeRender","memo","renderError","setError","components","semantic","allowUnknownElements","jsx","ConfigurationElement","param","application_id","user_id","online","handleChange","evt","data","action","checked","handleFocus","handleBlur","Dropdown","onChange","selection","onFocus","onBlur","Checkbox","toggle","Form","Field","ConfigurationBlock","panes","Object","keys","pageKey","menuItem","pane","Tab","Pane","key","as","Group","elementKey","elementIndex","Fragment","Label","marginLeft","cursor","Item","paramKey","paramIndex","length","Divider","fitted","renderActiveOnly","onTabChange","activeIndex","menu","fluid","vertical","menuPosition","grid","paneWidth","tabWidth","Panel","descriptionCode","isPending","Container","id","Breadcrumb","Section","to","codeEditorActions","howToActions","RequestsEnum","theme","styleActiveLine","lineNumbers","smartIndent","line","CodeEditor","codeEditor","height","isGenerating","width","onResizeStop","e","ref","d","Number","minHeight","minWidth","maxHeight","onBeforeChange","editor","onClick","disabled","EditorModal","editorModal","isOpened","handleClose","Modal","closeIcon","msg","onSubmit","defaultSettings","Input","required","header","primary","CodeSample","showLineNumbers","language","HowTo","howTo","setActiveIndex","handleItemClick","titleProps","index","href","Table","celled","Row","HeaderCell","Body","Cell","defaultValue","info","Accordion","styled","Title","Editor","paginationActions","Pagination","pagination","totalPages","onPageChange","activePage","editorsActions","Editors","editors","list","handleLoad","clearing","floated","List","divided","verticalAlign","animated","window","confirm","PageWrapper","on","position","Panels","notificationSystem","createRef","AbstractClient","entity","URL","axios","timeout","add","update","delete","getItem","getItems","helper","request","url","method","body","errorHandler","response","console","log","status","headers","current","addNotification","message","level","this","ApplicationsClient","a","client","EditorModalApiSaga","bind","takeEvery","safeSagaExecute","put","flag","location","watch","CodeEditorApiSaga","load","EditorsApiSaga","items","get","PanelApiSaga","validate","objectAssignDeep","RegExp","test","delay","rootSaga","root","all","Initialize","func","initialState","CodeEditorReducer","reduce","newState","errors","EditorModalReducer","EditorsReducer","HowToReducer","PaginationReducer","getDefaultSettings","PanelReducer","forEach","rootReducer","combineReducers","Create","store","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","createStore","run","configureStore","rootElement","document","getElementById","render","basename","path"],"mappings":"qWAAYA,E,kLCOCC,EAAS,SAAC,GAAD,QAAGC,YAAH,MAAU,aAAV,SACpB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,EAAMC,UAAU,GAC9B,kBAAC,IAAD,CAAaC,KAAK,SAASC,QAAS,4BAAKL,Q,SDTjCF,O,eAAAA,I,oBAAAA,M,KEAZ,ICAYQ,EDANC,EAAeC,EAAQ,KAAeC,KAE/BC,EAAa,SAACC,GAAD,OACxBJ,EAAaI,EAAM,CACjBC,YAAa,IACbC,YAAa,IACbC,sBAAuB,KACvBC,mBAAmB,EACnBC,wBAAwB,EACxBC,uBAAuB,EACvBC,eAAgB,SAChBC,YAAa,WACbC,0BAA0B,EAC1BC,kBAAkB,EAClBC,cAAc,EACdC,kBAAkB,EAClBC,iBAAkB,KAClBC,mBAAmB,EACnBC,aAAa,EACbC,KAAK,EACLC,oBAAoB,KEjBXC,EAAiB,WAA4C,IAChEC,EAAQC,cAARD,IASR,MAAO,CAAEA,MAAKE,UANFC,IAARH,EACKhC,EAAYoC,OAEZpC,EAAYqC,OCMVC,EACA,SAACC,GAAD,MAAuB,CAChCC,KAfmC,0BAgBnCD,YAHSD,EAMC,iBAAO,CACjBE,KAnBoC,6BAY3BF,EAUC,SAACC,GAAD,MAAgC,CAC1CC,KArBoC,2BAsBpCD,YAZSD,EAeN,SAACC,GAAD,MAA+B,CAClCC,KAtB4B,mBAuB5BD,YAjBSD,EAoBH,SAACC,GAAD,MAA+B,CACrCC,KA1B+B,sBA2B/BD,YAtBSD,EA6BF,SAACC,GAAD,MAAmD,CAC1DC,KAhCgC,uBAiChCD,YA/BSD,EAkCC,SAACC,GAAD,MAAiC,CAC3CC,KA3CoC,2BA4CpCD,Y,2BC7CSE,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1B,kBAACC,EAAA,EAAD,CAASC,UAAU,gBAAgBC,QAAQ,EAAMC,OAAO,GACtD,kBAACC,EAAA,EAAD,CAASzC,KAAK,MAAM0C,UAAU,GAC5B,kBAACD,EAAA,EAAQE,OAAT,KAAiBP,M,kCCaVQ,EACL,SAACX,GAAD,MAAqC,CACzCC,KArBsB,aAsBtBD,YAHSW,EAWA,SAACX,GAAD,MAAqC,CAC9CC,KA5B2B,kBA6B3BD,YAbSW,EAgBI,SAACX,GAAD,MAKR,CACLC,KApCgC,uBAqChCD,YAvBSW,EA0BD,SAACX,GAAD,MAAgC,CACxCC,KAxC2B,kBAyC3BD,YA5BSW,EA+BJ,iBAAO,CACZV,KA5CuB,gBAYdU,EAmCK,SAACX,GAAD,MAAgC,CAC9CC,KA9CkC,yBA+ClCD,YArCSW,EAwCI,SAACX,GAAD,MAMR,CACLC,KAxDiC,wBAyDjCD,YAhDSW,EAmDM,SAACX,GAAD,MAA4C,CAC3DC,KA5DmC,0BA6DnCD,YArDSW,EA6DK,SAACX,GAAD,MAAiC,CAC/CC,KAzEkC,yBA0ElCD,YA/DSW,EAkED,SAACX,GAAD,MAA2D,CACnEC,KAvE2B,kBAwE3BD,YApESW,EAuEC,SAACX,GAAD,MAA2B,CACrCC,KA1E6B,oBA2E7BD,YAzESW,EA4EC,SAACX,GAAD,MAAiC,CAC3CC,KAnF6B,oBAoF7BD,YA9ESW,EAiFF,SAACX,GAAD,MAAiC,CACxCC,KArFyB,gBAsFzBD,YChGSY,G,OAAM,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SACZC,EAAkBC,aAAY,SAACC,GAAD,OAAuBA,EAAMC,SAA3DH,cACFI,EAAWC,cAQjB,OANAC,qBAAU,WACHN,GACHI,EAASP,OAEV,CAACG,EAAeI,IAEfJ,EACK,yBAAKT,UAAU,OAAOQ,GAGxB,O,SCxBIQ,GAAS,CACpB,CACE1D,KAAM,QACN2D,MAAO,QACPC,MAAO,CAAEC,MAAO,QAASC,OAAO,EAAMC,UAAU,IAElD,CACE/D,KAAM,SACN2D,MAAO,SACPC,MAAO,CAAEC,MAAO,SAAUC,OAAO,EAAMC,UAAU,IAEnD,CACE/D,KAAM,MACN2D,MAAO,MACPC,MAAO,CAAEC,MAAO,MAAOC,OAAO,EAAMC,UAAU,IAGhD,CACE/D,KAAM,SACN2D,MAAO,SACPC,MAAO,CAAEC,MAAO,SAAUC,OAAO,EAAMC,UAAU,IAEnD,CACE/D,KAAM,QACN2D,MAAO,QACPC,MAAO,CAAEC,MAAO,QAASC,OAAO,EAAMC,UAAU,IAGlD,CACE/D,KAAM,OACN2D,MAAO,OACPC,MAAO,CAAEC,MAAO,OAAQC,OAAO,EAAMC,UAAU,IAEjD,CACE/D,KAAM,OACN2D,MAAO,OACPC,MAAO,CAAEC,MAAO,OAAQC,OAAO,EAAMC,UAAU,IAEjD,CACE/D,KAAM,SACN2D,MAAO,SACPC,MAAO,CAAEC,MAAO,SAAUC,OAAO,EAAMC,UAAU,IAEnD,CACE/D,KAAM,SACN2D,MAAO,SACPC,MAAO,CAAEC,MAAO,SAAUC,OAAO,EAAMC,UAAU,IAEnD,CACE/D,KAAM,OACN2D,MAAO,OACPC,MAAO,CAAEC,MAAO,OAAQC,OAAO,EAAMC,UAAU,IAEjD,CACE/D,KAAM,QACN2D,MAAO,QACPC,MAAO,CAAEC,MAAO,QAASC,OAAO,EAAMC,UAAU,IAElD,CACE/D,KAAM,OACN2D,MAAO,OACPC,MAAO,CAAEC,MAAO,OAAQC,OAAO,EAAMC,UAAU,IAEjD,CACE/D,KAAM,QACN2D,MAAO,QACPC,MAAO,CAAEC,MAAO,QAASC,OAAO,EAAMC,UAAU,KClEvCC,GAAQ,CACnB,CAAEhE,KAAM,OAAQ2D,MAAO,QACvB,CAAE3D,KAAM,QAAS2D,MAAO,SACxB,CAAE3D,KAAM,SAAU2D,MAAO,UACzB,CAAE3D,KAAM,QAAS2D,MAAO,SACxB,CAAE3D,KAAM,MAAO2D,MAAO,S,SPLZrD,O,mBAAAA,I,uBAAAA,I,iBAAAA,I,eAAAA,I,wBAAAA,M,KQUL,IAAM2D,GAAcC,IAAMC,cAAc,CAAEC,KAAM,KAE1CC,GAAO,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,KAAMpB,EAAgD,EAAhDA,SACrBK,EAAWC,cAEG,kBAATc,EACTf,EACEP,EAA4B,CAC1BR,MACE,wEAGuB,qBAAbU,GAChBK,EACEP,EAA4B,CAC1BR,MAAM,+BAAD,OAAiC8B,EAAjC,kBAKX,IAAMC,EAAoBC,QACxBpB,aAAY,SAACC,GAAD,OAAuBA,EAAMC,MAAMmB,SAASC,MAAMJ,OAnBW,EAqBpClB,aACrC,SAACC,GAAD,OAAuBA,EAAMC,SADvBqB,EArBmE,EAqBnEA,YAAaxB,EArBsD,EAqBtDA,cAIfyB,EAAWC,uBAAY,WAC3BtB,EAASP,EAAsB,CAAEsB,YAChC,CAACf,EAAUe,IAQd,OANAb,qBAAU,WACHc,GAAsBpB,GACzByB,MAED,CAACA,EAAUzB,EAAeoB,IAEzBA,EAEA,kBAACN,GAAYa,SAAb,CAAsBnB,MAAO,CAAES,KAAME,IAEjC,yBAAK5B,UAAS,oBAAeiC,IAAgBL,GAAQ,SAClDpB,IAOJ,MCxDI6B,GAAiB,WAG5B,OAFiBC,qBAAWf,IAApBG,MCCGa,GAAgB,SAC3BX,EACAY,EACAC,GAEA,IAAMf,EAAOW,KAEb,OAAO3B,aAAY,SAACC,GAIlB,OAHsBmB,QAAQnB,EAAMC,MAAMmB,SAASC,MAAMN,GAAME,IAIzDa,EACO9B,EAAMC,MAAMmB,SAASU,OAAOb,GAAMc,OAElC/B,EAAMC,MAAMmB,SAASC,MAAMN,GAAME,GAAMc,OAM7CF,M,UCAEG,GAAmB,SAAC,GAQY,IAP3Cf,EAO0C,EAP1CA,KACAc,EAM0C,EAN1CA,OACAlC,EAK0C,EAL1CA,SACAiC,EAI0C,EAJ1CA,OACAG,EAG0C,EAH1CA,SACAzB,EAE0C,EAF1CA,MACAzD,EAC0C,EAD1CA,KAEMmD,EAAWC,cAEG,kBAATc,GACTf,EACEP,EAA4B,CAC1BR,MAAO,mEAKb,IAAM4B,EAAOW,KAX6B,EAYF3B,aACtC,SAACC,GAAD,OAAuBA,EAAMC,SADvBiC,EAZkC,EAYlCA,aAAcpC,EAZoB,EAYpBA,cAGhBqC,EAAuBhB,QAC3BpB,aAAY,SAACC,GAAD,OAAuBA,EAAMC,MAAMmB,SAASC,MAAMN,GAAME,OAGlEgB,IACFF,EAAO,cAAgB,CACrB9C,KAAMhC,EAAsBgF,WAIlB,aAAVzB,IACFuB,EAAM,MAAY,CAChB9C,KAAMhC,EAAsBuD,QAInB,aAATzD,IACFgF,EAAM,KAAW,CACf9C,KAAMhC,EAAsBF,OAIhC,IAAMqF,EAAgBR,GAAcX,EAAMc,EAAQD,GAE5CO,EAAgBb,uBAAY,WAChCtB,EAASP,EAA2B,CAAEoB,OAAME,OAAMc,SAAQD,cACzD,CAAC5B,EAAUe,EAAMF,EAAMgB,EAAQD,IAElC1B,qBAAU,WACH+B,GAAyBrC,GAC5BuC,MAED,CAACA,EAAevC,EAAeqC,IA/CQ,MAiDdG,oBAAS,GAjDK,oBAiDnCC,EAjDmC,KAiD3BC,EAjD2B,KAmDpCC,EACJ,kBAACC,EAAA,EAAD,CACErD,UAAU,0BACVrC,QAASiE,EACT0B,QACET,GAAgBA,IAAiBjB,EAC/B,0BAAM5B,UAAU,kBAAkBQ,GAElCA,EAGJ+C,OAAQ,kBAAMJ,GAAU,IACxBK,QAAS,kBAAML,GAAU,IACzBM,KAAMZ,IAAiBjB,GAAQsB,IAInC,OAAIN,EACMG,EAAc,cAAc9B,OAASmC,GAAc,KAGtDA,GC3FIM,GAAc,SAAC,GAQY,IAPtC9B,EAOqC,EAPrCA,KAOqC,IANrC+B,iBAMqC,MANzB,OAMyB,EALrClB,EAKqC,EALrCA,OACAtB,EAIqC,EAJrCA,MACAzD,EAGqC,EAHrCA,KACAkF,EAEqC,EAFrCA,SACGgB,EACkC,wEACrC,GAAkB,SAAdD,GAAsC,UAAdA,EAC1B,MAAM,IAAIE,MAAM,2BAGlB,IAAMC,EAAqB,CACzB,CAAExG,KAAM,eAAgB2D,MAAO,QAAS8C,KAAM,cAC9C,CAAEzG,KAAM,eAAgB2D,MAAO,eAAgB8C,KAAM,qBACrD,CAAEzG,KAAM,cAAe2D,MAAO,QAAS8C,KAAM,eAGzCvB,EAAyB,CAC7BwB,KAAM,CACJpE,KAAMhC,EAAsBqG,OAC5BH,YAIEpB,EAASH,GAAcX,EAAMY,EAAeC,GAElD,OACE,kBAAC,GAAD,CACEb,KAAMA,EACNgB,SAAUA,EACVF,OAAQF,EACRC,OAAQA,EACRtB,MAAOA,EACPzD,KAAMA,GAEN,kBAACwG,EAAA,EAAD,eACE/C,MACY,aAAVA,GACKuB,EAAM,OAAa,IAAIzB,OAASD,GAAO,GAAGC,MAC3CE,EAENzD,KACW,aAATA,GACKgF,EAAM,MAAY,IAAIzB,OAASK,GAAM,GAAGL,MACzCvD,EAENqG,KAAI,UAAKI,OACPzB,EAAM,KAASzB,OAAS6C,EAAQ,GAAG7C,OADjC,YAEC0C,IACDC,MC/DCQ,GAAU,SAAC,GAAD,IAAG5D,EAAH,EAAGA,SAAaoD,EAAhB,oCACtB,kBAAC7D,EAAA,EAAD,eAASsE,UAAQ,GAAKT,EAAtB,CAA6B5D,UAAU,oBACrCQ,ICFU8D,GAAS,SAAC,GAAD,IAAG9D,EAAH,EAAGA,SAAaoD,EAAhB,oCACrB,kBAAC7D,EAAA,EAAD,eAASsE,SAAS,UAAaT,EAA/B,CAAsC5D,UAAU,sBAC9CQ,ICFUH,GAAS,SAAC,GAAD,IAAGG,EAAH,EAAGA,SAAaoD,EAAhB,oCACrB,kBAAC7D,EAAA,EAAD,eAASsE,SAAS,OAAUT,EAA5B,CAAmC5D,UAAU,sBAC3CQ,I,UCGU+D,GAAc,SAAC,GAMY,IALtC3C,EAKqC,EALrCA,KACAa,EAIqC,EAJrCA,OACAtB,EAGqC,EAHrCA,MACAzD,EAEqC,EAFrCA,KACGkG,EACkC,iDAC/BlB,EAASH,GAAcX,EAAM,GAAIa,GAEvC,OACE,kBAAC,GAAD,CACEb,KAAMA,EACNgB,UAAU,EACVF,OAAQ,GACRD,OAAQA,EACRtB,MAAOA,EACPzD,KAAMA,GAEN,kBAAC8G,GAAA,EAAD,eACEC,QAAS,GACTtD,MACY,aAAVA,GACKuB,EAAM,OAAa,IAAIzB,OAASD,GAAO,GAAGC,MAC3CE,EAENzD,KACW,aAATA,GACKgF,EAAM,MAAY,IAAIzB,OAASK,GAAM,GAAGL,MACzCvD,GAEFkG,MC5BCc,GAAc,SAAC,GAOkB,IAN5C9C,EAM2C,EAN3CA,KACAa,EAK2C,EAL3CA,OACAG,EAI2C,EAJ3CA,SACAzB,EAG2C,EAH3CA,MACAzD,EAE2C,EAF3CA,KACGkG,EACwC,4DAgBrCpB,EAAgB,CACpBwB,KAAM,CACJpE,KAAMhC,EAAsBqG,OAC5BH,QAlBuB,CACzB,CAAExG,KAAM,eAAgB2D,MAAO,OAAQ8C,KAAM,QAC7C,CACEzG,KAAM,kBACN2D,MAAO,iBACP8C,KAAM,kBAER,CAAEzG,KAAM,gBAAiB2D,MAAO,OAAQ8C,KAAM,QAC9C,CACEzG,KAAM,0BACN2D,MAAO,iBACP8C,KAAM,qBAWJrB,EAASH,GAAcX,EAAMY,EAAeC,GAElD,OACE,kBAAC,GAAD,CACEb,KAAMA,EACNgB,SAAUA,EACVF,OAAQF,EACRC,OAAQA,EACRtB,MAAOA,EACPzD,KAAMA,GAEN,kBAACwG,EAAA,EAAD,eACEH,KAAMrB,EAAM,KAASzB,MACrBE,MACY,aAAVA,GACKuB,EAAM,OAAa,IAAIzB,OAASD,GAAO,GAAGC,MAC3CE,EAENzD,KACW,aAATA,GACKgF,EAAM,MAAY,IAAIzB,OAASK,GAAM,GAAGL,MACzCvD,GAEFkG,M,UClDCe,GAAkB,SAAC,GAOF,IAN5B/C,EAM2B,EAN3BA,KACAkC,EAK2B,EAL3BA,QACArB,EAI2B,EAJ3BA,OACAG,EAG2B,EAH3BA,SACAlF,EAE2B,EAF3BA,KACGkG,EACwB,gEACGX,oBAAkB,GADrB,oBACpB2B,EADoB,KACXC,EADW,OAEL5B,mBAAiB,IAFZ,oBAEpB6B,EAFoB,KAEfC,EAFe,KAIrBvC,EAAgB,CACpBwC,MAAO,CACLpF,KAAMhC,EAAsBqG,OAC5BH,QAASA,EAAQmB,KAAI,SAAAC,GAAI,sBACpBA,EADoB,CAEvBC,MAAO,CAAEL,IAAKI,EAAKjE,cAKnByB,EAASH,GAAcX,EAAMY,EAAeC,GAE5C2C,EAAS1C,EAAM,MAAUzB,MAS/B,OAPAF,qBAAU,WACJqE,IAAWN,IACbD,GAAW,GACXE,EAAOK,MAER,CAACA,EAAQN,IAGV,kBAAC,GAAD,CACElD,KAAMA,EACNgB,SAAUA,EACVF,OAAQF,EACRC,OAAQA,EACR/E,KAAMA,GAEN,kBAACqC,EAAA,EAAD,CACEC,UAAU,6BACV4E,QAASA,EACT1E,OAAO,EACPmF,SAAS,GAERP,GACC,kBAACE,GAAA,EAAD,eACEF,IAAKA,GACDlB,EAFN,CAGElG,KACW,aAATA,GACKgF,EAAM,MAAY,IAAIzB,OAASK,GAAM,GAAGL,MACzCvD,EAEN4H,OAAQ,kBAAMT,GAAW,IACzBU,QAAS,kBAAMV,GAAW,IAC1BW,MAAO,CAAEC,QAASb,EAAU,IAAM,WCrBjCc,GAAaC,gBA9BI,SAAC,GAAc,IAAZ1H,EAAW,EAAXA,KACzB4C,EAAWC,cAMjB,OACE,kBAAC,IAAD,CACE8E,YAAa,SAAA9F,GAEX,OATW,SAAAA,GACfe,EAASP,KACTO,EAASP,EAA4B,CAAER,WAMnC+F,CAAS/F,EAAMA,OACR,MAETgG,WAAU,eACLC,EADK,CAERxF,MACAoB,QACA+B,eACAa,eACAlE,UACAiE,UACAF,WACAM,eACAC,qBAEFqB,sBAAsB,EACtBC,IAAKhI,O,qEC3BEiI,GAAuB,SAAC,GAMmB,IALtDtE,EAKqD,EALrDA,KACAF,EAIqD,EAJrDA,KACAyE,EAGqD,EAHrDA,MACAvG,EAEqD,EAFrDA,KACA6C,EACqD,EADrDA,OAEIW,EAAY,KADqC,EAGjB/D,cAA5B+G,EAH6C,EAG7CA,eAAgBC,EAH6B,EAG7BA,QAKlBxF,EAAWC,cACTG,EAAUP,aAAY,SAACC,GAAD,OAC3B8B,EACG9B,EAAMC,MAAMmB,SAASU,OAAOb,GAAMc,OAAOyD,GACzCxF,EAAMC,MAAMmB,SAASC,MAAMN,GAAME,GAAMc,OAAOyD,MAH5ClF,MAMA6C,EAAYpD,aAClB,SAACC,GAAD,OACEA,EAAMC,MAAMmB,SAASC,MAAMN,GAAME,GAAMc,OAAOyD,MAF1CrC,QAIAwC,EAAW5F,aAAY,SAACC,GAAD,OAAuBA,EAAMC,SAApD0F,OAEFC,EAAe,SAACC,EAAUC,GAC9B,IAAMC,EAAS,CACbzF,MAAOwF,EAAKxF,OAASwF,EAAKE,QAC1B/E,OACAF,OACAyE,QACA1D,UAEF5B,EAASP,EAA2BoG,IAChCJ,GACFzF,EACEP,EAAA,eACKoG,EADL,CAEEN,iBACAC,UACA5D,cAMFmE,EAAc,WAClB/F,EAASP,EAA6B,CAAEsB,WAGpCiF,EAAa,WACjBhG,EAASP,EAA6B,CAAEsB,UAAMrC,MAGhD,OAAQK,GACN,KAAKhC,EAAsBF,KACzB0F,EACE,kBAAC0D,GAAA,EAAD,CACEC,SAAUR,EACVS,WAAW,EACXlD,QAASxC,GACTM,KAAMuE,EACNlF,MAAOA,EACPgG,QAASL,EACTM,OAAQL,IAGZ,MAEF,KAAKjJ,EAAsBuD,MACzBiC,EACE,kBAAC0D,GAAA,EAAD,CACEC,SAAUR,EACVS,WAAW,EACXlD,QAAS9C,GACTY,KAAMuE,EACNlF,MAAOA,EACPgG,QAASL,EACTM,OAAQL,IAGZ,MAEF,KAAKjJ,EAAsBqG,OACzBb,EACE,kBAAC0D,GAAA,EAAD,CACEC,SAAUR,EACVS,WAAW,EACXlD,QAASA,EACTlC,KAAMuE,EACNlF,MAAOA,EACPgG,QAASL,EACTM,OAAQL,IAGZ,MAEF,KAAKjJ,EAAsBgF,SACzBQ,EACE,kBAAC+D,GAAA,EAAD,CACEJ,SAAUR,EACVI,QAAS1F,EACTmG,QAAQ,EACRxF,KAAMuE,EACNc,QAASL,EACTM,OAAQL,IAGZ,MAEF,QACE,OAAO,KAGX,OACE,kBAACQ,GAAA,EAAKC,MAAN,KACE,+BAAQnB,GACP/C,ICxHMmE,I,OAAqB,WAA4B,IAAD,EACvB7G,aAClC,SAACC,GAAD,OAAuBA,EAAMC,SADvBmB,EADmD,EACnDA,SAAUtB,EADyC,EACzCA,cAGVwB,EAAgBvB,aAAY,SAACC,GAAD,OAAuBA,EAAMC,SAAzDqB,YAEFpB,EAAWC,cASX0G,EAAQC,OAAOC,KAAK3F,EAASC,OAAOiD,KAAI,SAAC0C,GAAD,MAAc,CAC1DC,SAAUD,EACVE,KACE,kBAACC,GAAA,EAAIC,KAAL,CACE/H,UAAU,2BACVxC,OAAQmK,IAAY1F,EACpB+F,IAAKL,EACLM,GAAIlI,IAAQmI,OAEZ,kBAACnI,EAAA,EAAD,KACG0H,OAAOC,KAAK3F,EAASC,MAAM2F,IAAU1C,KACpC,SAACkD,EAAYC,GAAb,OACE,kBAAC,IAAMC,SAAP,CAAgBL,IAAKG,GACnB,4BACGA,EAAY,IACZpG,EAASC,MAAM2F,GAASQ,GAAY1F,QACnC,kBAACY,EAAA,EAAD,CACE1F,QAAQ,yDACR2F,QACE,kBAACgF,GAAA,EAAD,CAAO9C,MAAO,CAAE+C,WAAY,MAAOC,OAAQ,YAA3C,aAQR,kBAACC,GAAA,EAAKP,MAAN,KACGT,OAAOC,KAAK3F,EAASC,MAAM2F,GAASQ,GAAYzF,QAAQuC,KACvD,SAACyD,EAAUC,GAAX,OACE,kBAACF,GAAA,EAAD,CAAMT,IAAKW,GACT,kBAAC,GAAD,CACE/G,KAAMuG,EACNhC,MAAOuC,EACPhH,KAAMiG,EACN/H,KACEmC,EAASC,MAAM2F,GAASQ,GAAYzF,OAAOgG,GACxC9I,KAEL6C,OAAQV,EAASC,MAAM2F,GAASQ,GAAY1F,cAMrD2F,IACCX,OAAOC,KAAK3F,EAASC,MAAM2F,IAAUiB,OAAS,GAC9C,kBAACC,GAAA,EAAD,CAASC,QAAQ,cAUjC,OAAIrI,EAEA,kBAAC4G,GAAA,EAAD,CAAMrH,UAAU,uBACd,kBAAC8H,GAAA,EAAD,CACEiB,kBAAkB,EAClBC,YAtEgB,SAACxC,EAAUC,GACjC5F,EACEP,EAA4B,CAC1BsB,KAAM6E,EAAKe,MAAMf,EAAKwC,aAAarB,aAoEjCsB,KAAM,CAAEC,OAAO,EAAMC,UAAU,GAC/BC,aAAa,OACb7B,MAAOA,EACP8B,KAAM,CAAEC,UAAW,GAAIC,SAAU,MAMlC,OChFIC,I,OAAQ,SAAC,GAA2C,IAAzCnD,EAAwC,EAAxCA,OAAwC,EAQ1D5F,aAAY,SAACC,GAAD,OAAuBA,EAAMC,SAN3C8I,EAF4D,EAE5DA,gBACAjJ,EAH4D,EAG5DA,cACAmF,EAJ4D,EAI5DA,YACA+D,EAL4D,EAK5DA,UACA7J,EAN4D,EAM5DA,MACA8B,EAP4D,EAO5DA,KAP4D,EAU1BvC,cAA5B+G,EAVsD,EAUtDA,eAAgBC,EAVsC,EAUtCA,QAKlBxF,EAAWC,cAQjB,OANAC,qBAAU,WACJuF,GACFzF,EAASP,EAAsB,CAAE8F,iBAAgBC,eAElD,CAACC,EAAQzF,EAAUuF,EAAgBC,IAElCT,EAEA,kBAACgE,EAAA,EAAD,KACE,kBAAC7J,EAAA,EAAD,CAASE,QAAQ,EAAMC,OAAO,GAC5B,kBAACC,EAAA,EAAD,CACE4D,KAAK,iBACLrG,KAAK,MACL0C,UAAU,EACVzC,QAASiI,MAOf+D,EACK,kBAAC,EAAD,CAAQrM,KAAK,kBAGR,KAAVwC,EAEA,kBAAC8J,EAAA,EAAD,CAAWC,GAAG,SACZ,kBAAC,EAAD,CAAc/J,MAAOA,KAMzB,kBAAC8J,EAAA,EAAD,CAAWC,GAAG,SACXpJ,GACC,oCACE,yBAAKT,UAAU,gBACb,kBAAC8J,EAAA,EAAD,CAAYpM,KAAK,WACd2I,GACC,oCACE,kBAACyD,EAAA,EAAWC,QAAZ,KACE,kBAAC,IAAD,CAAMC,GAAE,kBAAa3D,IAArB,yBAEF,kBAACyD,EAAA,EAAWjB,QAAZ,CAAoB9E,KAAK,mBAG7B,kBAAC+F,EAAA,EAAWC,QAAZ,CAAoBvM,QAAM,GACvBoE,EACC,iDACaA,EAAM,IACjB,kBAACyB,EAAA,EAAD,CACE1F,QAAQ,0CACR2F,QAAS,kBAACU,EAAA,EAAD,CAAM7C,MAAM,OAAOzD,KAAK,QAAQkE,KAAK,YAIlD,yBAMR,kBAAC,GAAD,MACA,kBAAC8D,GAAD,CAAYzH,KAAMyL,QC9FfO,GACC,SAACtK,GAAD,MAAgC,CAC1CC,KAbmC,0BAcnCD,YAHSsK,GAMG,SAACtK,GAAD,MAA2C,CACvDC,KAjBqC,4BAkBrCD,YARSsK,GAWD,SAACtK,GAAD,MAA+B,CACvCC,KApBiC,wBAqBjCD,YAbSsK,GAgBC,SAACtK,GAAD,MAAyD,CACnEC,KAxBmC,0BAyBnCD,YAlBSsK,GAqBC,SAACtK,GAAD,MAAiC,CAC3CC,KA1BmC,0BA2BnCD,YAvBSsK,GA0BF,SAACtK,GAAD,MAAiC,CACxCC,KAjC+B,sBAkC/BD,YA5BSsK,GA+BJ,iBAAO,CACZrK,KAlC6B,sBCNpBsK,I,OACL,iBAAO,CACXtK,KALuB,iBAGdsK,GAKJ,iBAAO,CACZtK,KARwB,uBCsB5B9B,EAAQ,KACRA,EAAQ,KAER,IC1BYqM,GD2BNrG,GAAU,CACdxE,KAAM,MACN8K,MAAO,kBACPC,iBAAiB,EACjBC,aAAa,EACbC,aAAa,EACbC,MAAM,GAGKC,GAAa,WAAqB,IAAD,EACtBtL,IAAdC,EADoC,EACpCA,IAAKE,EAD+B,EAC/BA,KAD+B,EAGKoB,aAC/C,SAACC,GAAD,OAAuBA,EAAM+J,cADvBzM,EAHoC,EAGpCA,KAAM0M,EAH8B,EAG9BA,OAAQhB,EAHsB,EAGtBA,UAAW/H,EAHW,EAGXA,KAAM9B,EAHK,EAGLA,MAGjC8F,EAAc9D,QAClBpB,aAAY,SAACC,GAAD,OAAuBA,EAAMC,MAAMgF,gBAPL,EASSlF,aACnD,SAACC,GAAD,OAAuBA,EAAMC,SADvB8I,EAToC,EASpCA,gBAA4BkB,EATQ,EASnBjB,UAInB9I,EAAWC,cAEjBC,qBAAU,WACJzB,IAASlC,EAAYqC,MACvBoB,EAASoJ,GAA2B,CAAE7K,IAAKA,OAE5C,CAACA,EAAKE,EAAMuB,IA+Bf,OAAI8I,EACK,kBAAC,EAAD,CAAQrM,KAAK,sBAGR,KAAVwC,EAEA,kBAACC,EAAA,EAAD,CAASE,QAAQ,EAAMC,OAAO,GAC5B,kBAACC,EAAA,EAAD,CAASzC,KAAK,MAAM0C,UAAU,GAC5B,kBAACD,EAAA,EAAQE,OAAT,KAAiBP,KAOvB,yBAAKE,UAAU,yBACb,kBAACD,EAAA,EAAD,CAASG,OAAO,EAAMF,UAAU,uCAC3B4K,GAAgB,kBAAC,GAAD,OAAc,kBAAC,EAAD,CAAQtN,KAAK,sBAEhD,kBAAC,YAAD,CACE0C,UAAU,qCACVtC,KAAM,CAAEmN,MAAO,OAAQF,UACvBG,aAAc,SAACC,EAAGpH,EAAWqH,EAAKC,GAApB,OACZpK,EACEoJ,GAA+B,CAC7BU,OAAQO,OAAOP,GAAUM,EAAEN,WAIjCQ,UAzFU,GA0FVC,SAAS,OACTC,UAAW,SAEX,0BAAMrL,UAAU,uBACd,uBAAGA,UAAU,QACX,kBAACgE,EAAA,EAAD,CAAMpC,KAAK,YADb,SAIA,kCACA,2BAAIA,IAGN,kBAAC,aAAD,CACEX,MAAOhD,EACP6F,QAASA,GACTwH,eAjEiB,SAACC,EAAa9E,EAAWxF,GAChDJ,EACEoJ,GAA6B,CAC3BhM,KAAMgD,QAiEN,kBAACiD,EAAA,EAAOgE,MAAR,CAAclI,UAAU,+BACtB,kBAACkE,EAAA,EAAD,CAAQH,KAAK,WAAWyH,QArDR,WACtB3K,EAASqJ,SAqDH,kBAAChG,EAAA,EAAD,CAAQH,KAAK,0BAA0ByH,QAzEpB,kBACzB3K,EAASoJ,GAA+B,CAAEU,OAAQ,cAyE5C,kBAACzG,EAAA,EAAD,CACEH,KAAK,0BACLyH,QA/EmB,kBAC3B3K,EAASoJ,GAA+B,CAAEU,OAnC5B,UAqHV,kBAACzG,EAAA,EAAOgE,MAAR,CAAclI,UAAU,gCACtB,kBAAC,IAAD,CAAMgK,GAAG,YACP,kBAAC9F,EAAA,EAAD,CACEH,KAAK,eACLpG,QAAQ,kBACR6N,QAAS,WACP3K,EAASP,KACTO,EAASoJ,UAIf,kBAAC/F,EAAA,EAAD,CACEH,KAAK,OACLa,QAASgG,EACTY,QAAS,WACP3K,EAASP,KACTO,EAASoJ,GAA6B,CAAEhM,KAAMD,EAAWC,MACzD4C,EAASP,EAAkB,CAAEoJ,gBAAiB1L,EAAWC,OAE3DwN,UAAWxN,GAAQA,IAASyL,GAAmBkB,IAEjD,kBAAC1G,EAAA,EAAD,CACEH,KAAMzE,IAASlC,EAAYoC,OAAS,MAAQ,OAC5CiM,UACG/B,GACD9D,GACA3H,IAASyL,GACTkB,EAEFY,QAnHc,kBACtB3K,EAASnB,EAA6BkC,OAoHhC,kBAACsC,EAAA,EAAD,CACEH,KAAK,OACLpG,QAAQ,cACR6N,QAvGe,WACvB3K,EACEoJ,GAA6B,CAC3BhM,KAAMD,EAAWC,OAqGbwN,SAAUb,Q,UExKTc,GAAc,WAAqB,IAAD,EACvBvM,IAAdC,EADqC,EACrCA,IAAKE,EADgC,EAChCA,KADgC,EAGAoB,aAC3C,SAACC,GAAD,OAAuBA,EAAMgL,eADvBC,EAHqC,EAGrCA,SAAUjC,EAH2B,EAG3BA,UAAW7J,EAHgB,EAGhBA,MAAO8B,EAHS,EAGTA,KAHS,EAMPlB,aACpC,SAACC,GAAD,OAAuBA,EAAMC,SADvB8I,EANqC,EAMrCA,gBAAiB3H,EANoB,EAMpBA,SAInBlB,EAAWC,cAEX+K,EAAc,kBAAchL,EAASnB,MA0B3C,OACE,kBAACoM,GAAA,EAAD,CAAOpO,KAAK,OAAO+F,KAAMmI,EAAUG,WAAS,EAACvI,QAASqI,GACpD,kBAACC,GAAA,EAAMzL,OAAP,KACGf,IAASlC,EAAYoC,OAClB,sBACA,qBAEN,kBAACsM,GAAA,EAAM1H,QAAP,KACE,kBAACiD,GAAA,EAAD,CACEvH,MAAOgC,QAAQhC,EAAMkM,KACrBpH,QAAS+E,EACTsC,SAhCa,WACf3M,IAASlC,EAAYoC,OACvBqB,EACEnB,EAAuB,CACrBkC,OACA8H,gBAAiB1L,EAAW0L,GAC5BwC,gBAAiBnK,KAIrBlB,EACEnB,EAA0B,CACxBN,MACAwC,OACA8H,kBACAwC,gBAAiBnK,OAmBjB,kBAACsF,GAAA,EAAK8E,MAAN,CACEvK,KAAK,OACLV,MAAM,OACND,MAAOW,EACPwK,UAAU,EACVjD,OAAO,EACPpC,SA3CW,SAACP,EAAUC,GAAX,OACnB5F,EAASnB,EAA8B,CAAEkC,KAAM6E,EAAKxF,YA4C9C,kBAACd,EAAA,EAAD,CAASL,OAAO,EAAMuM,OAAO,mBAAmB1O,QAASmC,EAAMkM,MAC/D,kBAAC9H,EAAA,EAAD,CAAQtE,KAAK,SAAS0M,SAAS,GAC5BhN,IAASlC,EAAYoC,OAAS,SAAW,UAE5C,kBAAC0E,EAAA,EAAD,CAAQsH,QAASK,GAAjB,c,8BCjDJU,I,OAAa,SAAC,GAAD,IAAGtO,EAAH,EAAGA,KAAH,OACjB,kBAAC,KAAD,CAAmBuO,iBAAiB,EAAMC,SAAS,OAChDxO,KAIQyO,GAAQ,WAAO,IAClBd,EAAalL,aAAY,SAACC,GAAD,OAAuBA,EAAMgM,SAAtDf,SACF/K,EAAWC,cAFQ,EAMamC,oBAAU,GANvB,oBAMlBgG,EANkB,KAML2D,EANK,KAQnBC,EAAkB,SAAC9B,EAAQ+B,GAAqC,IAC5DC,EAAUD,EAAVC,MAGRH,EAFiB3D,IAAgB8D,GAAS,EAAIA,IAKhD,OACE,kBAACjB,GAAA,EAAD,CACE9L,UAAU,QACVtC,KAAK,aACL+F,KAAMmI,EACNG,WAAW,EACXvI,QAjBgB,kBAAM3C,EAASqJ,QAmB/B,kBAAC4B,GAAA,EAAMzL,OAAP,CAAc4H,GAAG,MACf,kBAACjE,EAAA,EAAD,CAAMpC,KAAK,4BADb,iBAIA,kBAACkK,GAAA,EAAM1H,QAAP,CAAe6D,GAAG,aAChB,+EACA,uEACA,4BACE,sFAC0D,IACxD,uBAAG+E,KAAK,aAAR,oBAFF,KAIA,qCACQ,kBAAC9I,EAAA,EAAD,CAAQxG,KAAK,OAAOqG,KAAK,SADjC,mEAIA,qFACyD,IACvD,kBAACG,EAAA,EAAD,CAAQxG,KAAK,OAAOqG,KAAK,QAF3B,wBAIA,mFACA,oCACQ,IACN,kBAACG,EAAA,EAAD,CAAQoI,SAAS,EAAM5O,KAAK,QAA5B,WAIF,qGAKF,oEACA,4BACE,qFACyD,IACvD,uBAAGsP,KAAK,aAAR,oBAFF,KAIA,qCACQ,kBAAC9I,EAAA,EAAD,CAAQxG,KAAK,OAAOqG,KAAK,SADjC,mEAIA,6EACiD,IAC/C,kBAACG,EAAA,EAAD,CAAQxG,KAAK,OAAOqG,KAAK,QAF3B,wBAIA,uHAGE,6BAHF,0GAOA,oCACQ,IACN,kBAACG,EAAA,EAAD,CAAQoI,SAAS,EAAM5O,KAAK,QAA5B,YAMJ,wBAAImM,GAAG,YAAP,qDACA,sFAEA,4MAG8C,IAC5C,kBAAC3F,EAAA,EAAD,CAAQxG,KAAK,OAAOqG,KAAK,SACzB,6BALF,gKAQqC,IACnC,uBAAGiJ,KAAK,kBAAR,SACQ,kBAAChJ,EAAA,EAAD,CAAMpC,KAAK,gBAVrB,KAeA,sEACA,4BACE,kDAEE,4BACE,4BACE,uBAAGoL,KAAK,QAAR,QAEF,4BACE,uBAAGA,KAAK,SAAR,WAIN,+DAEE,4BACE,4BACE,uBAAGA,KAAK,gBAAR,gBAEF,4BACE,uBAAGA,KAAK,oBAAR,oBAEF,4BACE,uBAAGA,KAAK,gBAAR,gBAEF,4BACE,uBAAGA,KAAK,gBAAR,kBAIN,yEAGF,iFACA,4BACE,+GAIA,oEACA,kGAKF,qEACA,kBAAC,GAAD,CACE/O,KAAM,qFAGR,sEACA,kBAACgP,GAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,GAAA,EAAM5M,OAAP,KACE,kBAAC4M,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMG,WAAP,kBACA,kBAACH,GAAA,EAAMG,WAAP,CAAkBvC,MAAM,KAAxB,QACA,kBAACoC,GAAA,EAAMG,WAAP,iBACA,kBAACH,GAAA,EAAMG,WAAP,sBAIJ,kBAACH,GAAA,EAAMI,KAAP,KACE,kBAACJ,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMK,KAAP,aACA,kBAACL,GAAA,EAAMK,KAAP,eACA,kBAACL,GAAA,EAAMK,KAAP,aACA,kBAACL,GAAA,EAAMK,KAAP,8BAEF,kBAACL,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMK,KAAP,aACA,kBAACL,GAAA,EAAMK,KAAP,qBACgB,IACd,kBAACxG,GAAA,EAAD,CACEyG,aAAcjM,GAAM,GAAGL,MACvB+F,WAAS,EACT3B,SAAO,EACPvB,QAASxC,KACR,IAPL,MAQK,uBAAG0L,KAAK,aAAR,eAEL,kBAACC,GAAA,EAAMK,KAAP,cACA,kBAACL,GAAA,EAAMK,KAAP,6BAEF,kBAACL,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMK,KAAP,cACA,kBAACL,GAAA,EAAMK,KAAP,sBACiB,IACf,kBAACxG,GAAA,EAAD,CACEyG,aAAcvM,GAAO,GAAGC,MACxB+F,WAAS,EACT3B,SAAO,EACPvB,QAAS9C,KACR,IAPL,MAQK,uBAAGgM,KAAK,aAAR,eAEL,kBAACC,GAAA,EAAMK,KAAP,cACA,kBAACL,GAAA,EAAMK,KAAP,+BAEF,kBAACL,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMK,KAAP,eACA,kBAACL,GAAA,EAAMK,KAAP,gBACA,kBAACL,GAAA,EAAMK,KAAP,cACA,kBAACL,GAAA,EAAMK,KAAP,wPAOF,kBAACL,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMK,KAAP,iBACA,kBAACL,GAAA,EAAMK,KAAP,gBACA,kBAACL,GAAA,EAAMK,KAAP,cACA,kBAACL,GAAA,EAAMK,KAAP,8DAMN,kBAACnN,EAAA,EAAD,CAAS0J,GAAG,WAAW2D,MAAM,GAC3B,uIAMF,sDACA,kBAACC,GAAA,EAAD,CAAWtE,OAAK,EAACuE,QAAM,GACrB,kBAACD,GAAA,EAAUE,MAAX,CACEnQ,OAAwB,IAAhByL,EACR8D,MAAO,EACPvB,QAASqB,EACThD,GAAG,OAEH,4BACE,kBAAC7F,EAAA,EAAD,CAAMpC,KAAK,aADb,QAKF,kBAAC6L,GAAA,EAAUrJ,QAAX,CAAmB5G,OAAwB,IAAhByL,GACzB,gGAGA,4CACA,kBAAC,GAAD,CAAYhL,KAAK,iBAGnB,kBAACwP,GAAA,EAAUE,MAAX,CACEnQ,OAAwB,IAAhByL,EACR8D,MAAO,EACPvB,QAASqB,EACThD,GAAG,QAEH,4BACE,kBAAC7F,EAAA,EAAD,CAAMpC,KAAK,aADb,SAKF,kBAAC6L,GAAA,EAAUrJ,QAAX,CAAmB5G,OAAwB,IAAhByL,GACzB,wFACA,sCACA,kBAACgE,GAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,GAAA,EAAM5M,OAAP,KACE,kBAAC4M,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMG,WAAP,kBACA,kBAACH,GAAA,EAAMG,WAAP,aACA,kBAACH,GAAA,EAAMG,WAAP,iBACA,kBAACH,GAAA,EAAMG,WAAP,sBAIJ,kBAACH,GAAA,EAAMI,KAAP,KACE,kBAACJ,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMK,KAAP,aACA,kBAACL,GAAA,EAAMK,KAAP,eACA,kBAACL,GAAA,EAAMK,KAAP,aACA,kBAACL,GAAA,EAAMK,KAAP,6BAIN,4CACA,kBAAC,GAAD,CAAYrP,KAAK,sCAGnB,kBAACwP,GAAA,EAAUE,MAAX,CACEnQ,OAAwB,IAAhByL,EACR8D,MAAO,EACPvB,QAASqB,EACThD,GAAG,eAEH,4BACE,kBAAC7F,EAAA,EAAD,CAAMpC,KAAK,aADb,gBAKF,kBAAC6L,GAAA,EAAUrJ,QAAX,CAAmB5G,OAAwB,IAAhByL,GACzB,0EAC+C,IAC7C,uBAAG+D,KAAK,mDAAR,wBAEK,IAJP,sBAQA,kDACA,kBAACxI,GAAA,EAAD,CAAUC,QAAS,KACnB,4CACA,kBAAC,GAAD,CAAYxG,KAAK,oCAGnB,kBAACwP,GAAA,EAAUE,MAAX,CACEnQ,OAAwB,IAAhByL,EACR8D,MAAO,EACPvB,QAASqB,EACThD,GAAG,mBAEH,4BACE,kBAAC7F,EAAA,EAAD,CAAMpC,KAAK,aADb,oBAKF,kBAAC6L,GAAA,EAAUrJ,QAAX,CAAmB5G,OAAwB,IAAhByL,GACzB,8EACmD,IACjD,uBAAG+D,KAAK,gDAAR,qBAEK,IAJP,sBAOA,sCACA,kBAACC,GAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,GAAA,EAAM5M,OAAP,KACE,kBAAC4M,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMG,WAAP,kBACA,kBAACH,GAAA,EAAMG,WAAP,aACA,kBAACH,GAAA,EAAMG,WAAP,iBACA,kBAACH,GAAA,EAAMG,WAAP,sBAIJ,kBAACH,GAAA,EAAMI,KAAP,KACE,kBAACJ,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMK,KAAP,gBACA,kBAACL,GAAA,EAAMK,KAAP,KACG,qDAEH,kBAACL,GAAA,EAAMK,KAAP,aACA,kBAACL,GAAA,EAAMK,KAAP,0CAIN,kDACA,kBAACtI,GAAA,EAAD,CACEF,IAAI,2DACJpH,KAAK,UAEP,4CACA,kBAAC,GAAD,CACEO,KAAI,oFAOR,kBAACwP,GAAA,EAAUE,MAAX,CACEnQ,OAAwB,IAAhByL,EACR8D,MAAO,EACPvB,QAASqB,EACThD,GAAG,eAEH,4BACE,kBAAC7F,EAAA,EAAD,CAAMpC,KAAK,aADb,gBAKF,kBAAC6L,GAAA,EAAUrJ,QAAX,CAAmB5G,OAAwB,IAAhByL,GACzB,0EAC+C,IAC7C,uBAAG+D,KAAK,iDAAR,sBAEK,IAJP,sBAOA,sCACA,kBAACC,GAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,GAAA,EAAM5M,OAAP,KACE,kBAAC4M,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMG,WAAP,kBACA,kBAACH,GAAA,EAAMG,WAAP,aACA,kBAACH,GAAA,EAAMG,WAAP,iBACA,kBAACH,GAAA,EAAMG,WAAP,sBAIJ,kBAACH,GAAA,EAAMI,KAAP,KACE,kBAACJ,GAAA,EAAME,IAAP,KACE,kBAACF,GAAA,EAAMK,KAAP,kBACA,kBAACL,GAAA,EAAMK,KAAP,0BACA,kBAACL,GAAA,EAAMK,KAAP,cACA,kBAACL,GAAA,EAAMK,KAAP,6DAMN,kDACA,kBAACpJ,EAAA,EAAD,CAAQH,KAAK,eACb,4CACA,kBAAC,GAAD,CAAY9F,KAAK,iDAGnB,kBAACwP,GAAA,EAAUE,MAAX,CACEnQ,OAAwB,IAAhByL,EACR8D,MAAO,EACPvB,QAASqB,EACThD,GAAG,eAEH,4BACE,kBAAC7F,EAAA,EAAD,CAAMpC,KAAK,aADb,gBAKF,kBAAC6L,GAAA,EAAUrJ,QAAX,CAAmB5G,OAAwB,IAAhByL,GACzB,0EAC+C,IAC7C,uBAAG+D,KAAK,iDAAR,sBAEK,IAJP,sBAOA,kDACA,kBAAC9I,EAAA,EAAD,CAAQH,KAAK,SACb,4CACA,kBAAC,GAAD,CAAY9F,KAAK,kCAGrB,6BACA,4BACE4L,GAAG,gBACHgB,MAAM,OACNF,OAAO,QACP7F,IAAI,sCCrdD8I,GAAS,kBACpB,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,oBCJSC,GACL,SAAClO,GAAD,MAAyC,CAC7CC,KAL2B,kBAM3BD,YAHSkO,GAMK,SAAClO,GAAD,MAAuC,CACrDC,KATuC,8BAUvCD,YCHSmO,GAAa,SAAC,GAAkC,IAAhCxI,EAA+B,EAA/BA,OAA+B,EACtB5E,aAClC,SAACC,GAAD,OAAuBA,EAAMoN,cADvBC,EADkD,EAClDA,WAAY/L,EADsC,EACtCA,YAIdpB,EAAWC,cAEjB,OAAIkN,EAAa,EAEb,kBAAC,KAAD,CACEC,aAAc,SAACzH,EAAKC,GAClBnB,EAAO,CAAErD,YAAawE,EAAKyH,aAC3BrN,EACEgN,GAAiC,CAC/B5L,YAAawE,EAAKyH,eAIxBA,WAAYjM,EACZ+L,WAAYA,IAKX,MC1BIG,GACD,SAACxO,GAAD,MAAwC,CAChDC,KAR6B,oBAS7BD,YAHSwO,GAMC,SAACxO,GAAD,MAA2C,CACrDC,KAZ+B,sBAa/BD,YARSwO,GAWF,SAACxO,GAAD,MAAiC,CACxCC,KAhB2B,kBAiB3BD,YAbSwO,GAgBH,SAACxO,GAAD,MAA+B,CACrCC,KApB0B,iBAqB1BD,YAlBSwO,GAqBC,SAACxO,GAAD,MAAiC,CAC3CC,KAxB+B,sBAyB/BD,YCjBSyO,I,OAAU,WAAqB,IAAD,EACN1N,aACjC,SAACC,GAAD,OAAuBA,EAAM0N,WADvBC,EADiC,EACjCA,KAAM3E,EAD2B,EAC3BA,UAAW7J,EADgB,EAChBA,MAInBe,EAAWC,cAEXyN,EAAapM,uBACjB,SAACO,GAAD,OACE7B,EAASsN,GAAwBzL,MACnC,CAAC7B,IAYHE,qBAAU,WACRwN,MACC,CAAC1N,EAAU0N,IAuCd,OAAI5E,EACK,kBAAC,EAAD,CAAQrM,KAAK,uBAGR,KAAVwC,EACK,kBAAC,EAAD,CAAcA,MAAOA,IAI5B,kBAAC8J,EAAA,EAAD,CAAW5J,UAAU,kBACnB,kBAACD,EAAA,EAAD,CAASC,UAAU,yBAAyBwO,UAAU,EAAMtO,OAAO,GACjE,kBAAC,IAAD,CACE8J,GAAG,UACHwB,QAAS,WACP3K,EAASP,KACTO,EAASoJ,QAGX,kBAAC/F,EAAA,EAAD,CACEuK,QAAQ,QACR1K,KAAK,MACLpG,QAAQ,SACR2O,SAAS,EACTpM,OAAO,KAGX,wCA9DAoO,EAAK1F,OAEL,kBAAC7I,EAAA,EAAD,CAASC,UAAU,kBACjB,kBAAC0O,GAAA,EAAD,CACEC,SAAS,EACTC,cAAc,SACdlR,KAAK,MACLmR,UAAU,EACV7H,WAAW,GAEVsH,EAAKrJ,KAAI,SAACC,GAAD,OACR,kBAACwJ,GAAA,EAAKjG,KAAN,CAAWT,IAAK9C,EAAK9F,KACnB,kBAAC,IAAD,CAAM4K,GAAE,kBAAa9E,EAAK9F,MACxB,kBAACsP,GAAA,EAAKrO,OAAN,KAAc6E,EAAKtD,OAErB,kBAAC8M,GAAA,EAAKtK,QAAN,KACE,kBAACF,EAAA,EAAD,CACEH,KAAK,SACLyH,QAAS,kBAhCLpM,EAgCwB8F,EAAK9F,SA9B/B0P,OAAOC,QAAQ,6BAG/BlO,EAASsN,GAAsB,CAAE/O,UALhB,IAACA,YA2ClB,kBAACe,EAAA,EAAD,KACE,kBAACA,EAAA,EAAQE,OAAT,gCACA,oEAmCF,kBAAC,GAAD,CAAYiF,OAAQiJ,OCnGbS,I,OAAc,SAAC,GAAD,IAAGxO,EAAH,EAAGA,SAAH,OACzB,yBAAKR,UAAU,gBACb,gCACE,kBAAC4J,EAAA,EAAD,KACE,0BAAM5J,UAAU,QACd,kBAACgE,EAAA,EAAD,CAAMpC,KAAK,YADb,UAIA,kBAACyB,EAAA,EAAD,CACE4L,GAAG,QACH3L,QAAS,kBAACU,EAAA,EAAD,CAAMhE,UAAU,OAAO4B,KAAK,cAAclE,KAAK,QACxDC,QACE,kBAACuG,EAAA,EAAOgE,MAAR,CAAckB,UAAU,EAAMlJ,OAAO,GACnC,uBAAG8M,KAAK,mBACN,kBAAC9I,EAAA,EAAD,CAAQH,KAAK,UAAUpG,QAAQ,aAEjC,uBAAGqP,KAAK,YACN,kBAAC9I,EAAA,EAAD,CAAQH,KAAK,SAASpG,QAAQ,aAIpCuR,SAAS,mBAKf,8BAAO1O,MCrBE2O,GAAS,WAAqB,IAAD,EACLzO,aACjC,SAACC,GAAD,OAAuBA,EAAM0N,WADvBC,EADgC,EAChCA,KAAM3E,EAD0B,EAC1BA,UAAW7J,EADe,EACfA,MAIjBuG,EAAYhH,cAAZgH,QAEFxF,EAAWC,cAEXyN,EAAapM,uBACjB,SAACO,GAAD,OACE7B,EAASsN,GAAwBzL,MACnC,CAAC7B,IAGHE,qBAAU,WACRwN,IACA1N,EAASP,OACR,CAACO,EAAU0N,IA4Bd,OAAI5E,EACK,kBAAC,EAAD,CAAQrM,KAAK,sBAGR,KAAVwC,EACK,kBAAC,EAAD,CAAcA,MAAOA,IAI5B,kBAAC8J,EAAA,EAAD,CAAW5J,UAAU,kBACnB,kBAACD,EAAA,EAAD,CAASC,UAAU,yBAAyBwO,UAAU,EAAMtO,OAAO,GACjE,qDApCAoO,EAAK1F,OAEL,kBAAC7I,EAAA,EAAD,KACE,kBAAC2O,GAAA,EAAD,CACEC,SAAS,EACTC,cAAc,SACdlR,KAAK,MACLmR,UAAU,EACV7H,WAAW,GAEVsH,EAAKrJ,KAAI,SAACC,GAAD,OACR,kBAACwJ,GAAA,EAAKjG,KAAN,CAAWT,IAAK9C,EAAK9F,KACnB,kBAAC,IAAD,CAAM4K,GAAE,iBAAY9E,EAAK9F,IAAjB,YAAwBiH,IAC9B,kBAACqI,GAAA,EAAKrO,OAAN,KAAc6E,EAAKtD,aAS1B,KAkBL,kBAAC,GAAD,CAAY0D,OAAQiJ,MCjEba,GAAqB5N,IAAM6N,Y,qIVT5BlF,O,aAAAA,I,mBAAAA,I,mBAAAA,I,qBAAAA,I,wBAAAA,Q,KWAL,ICOemF,GAWpB,WAAmBC,GAAiB,IAAD,iCAV5BA,YAU4B,OAT5BC,SAS4B,OAR5BC,MAAQA,KAAMjQ,OAAO,CAAEkQ,QAAS,MAQJ,KANnBC,SAMmB,OALnBC,YAKmB,OAJnBC,YAImB,OAHnBC,aAGmB,OAFnBC,cAEmB,OAK5BC,OAAS,SACdC,GAQwB,IAPxBxJ,EAOuB,uDAJnB,GACJ/D,EAGuB,uDADnB,GAEJ,OAAQuN,GACN,KAAK9F,GAAawF,IAChB,MAAO,CACLO,IAAI,GAAD,OAAK,EAAKV,IAAV,SACHW,OAAQ,OACR1J,KAAMA,EAAK2J,MAEf,KAAKjG,GAAayF,OAChB,MAAO,CACLM,IAAI,GAAD,OAAK,EAAKV,IAAV,iBAAsB/I,EAAKrH,KAC9B+Q,OAAQ,MACR1J,KAAMA,EAAK2J,MAEf,KAAKjG,GAAa0F,OAChB,MAAO,CACLK,IAAI,GAAD,OAAK,EAAKV,IAAV,iBAAsB/I,EAAKrH,KAC9B+Q,OAAQ,UAEZ,KAAKhG,GAAa2F,QAChB,MAAO,CACLI,IAAI,GAAD,OAAK,EAAKV,IAAV,iBAAsB/I,EAAKrH,KAC9B+Q,OAAQ,OAEZ,KAAKhG,GAAa4F,SAChB,MAAO,CACLG,IAAI,GAAD,OAAK,EAAKV,IAAV,WACHW,OAAQ,MACRzN,OAAO,eAAMA,IAEjB,QACE,MAAO,KA7CsB,KAiD5B2N,aAAe,SAACvQ,GAErB,OAAIA,EAAMwQ,UAKRC,QAAQC,IAAI1Q,EAAMwQ,SAAS7J,MAC3B8J,QAAQC,IAAI1Q,EAAMwQ,SAASG,QAC3BF,QAAQC,IAAI1Q,EAAMwQ,SAASI,SACpB5Q,EAAMwQ,UAGXxQ,EAAMmQ,SAMRM,QAAQC,IAAI1Q,EAAMmQ,SAClBb,GAAmBuB,QAAQC,gBAAgB,CACzC1B,SAAU,KACV2B,QAAS/Q,EAAM+Q,QACfC,MAAO,UAEF,CACLrK,KAAM,CACJ3G,MAAOA,EAAM+Q,YAKnBN,QAAQC,IAAI,QAAS1Q,EAAM+Q,SAEpB/Q,IAlFPiR,KAAKxB,OAASA,EACdwB,KAAKvB,IAAL,UDpB4B,8BCoB5B,OAAiCuB,KAAKxB,SCf7ByB,GAAb,YACE,aAAe,IAAD,+BACZ,8CAAM,kBAGDrB,IAJO,yCAID,WACXS,GADW,UAAAa,EAAA,+EAIIxB,KAAM,EAAKO,OAAO7F,GAAawF,IAAK,CAAES,UAJ1C,iGAMF,EAAKC,aAAL,OANE,wDAJC,wDAcPT,OAdO,yCAcE,WACdnJ,GADc,kBAAAwK,EAAA,6DAGN7R,EAAiBqH,EAAjBrH,IAAQgR,EAHF,aAGW3J,EAHX,2BAMC,EAAKgJ,MAAM,EAAKO,OAAO7F,GAAayF,OAAQ,CAAExQ,MAAKgR,UANpD,iGAQL,EAAKC,aAAL,OARK,yDAdF,wDA0BPR,OA1BO,yCA0BE,WAAOzQ,GAAP,UAAA6R,EAAA,+EAEC,EAAKxB,MAAM,EAAKO,OAAO7F,GAAa0F,OAAQ,CAAEzQ,SAF/C,iGAIL,EAAKiR,aAAL,OAJK,wDA1BF,wDAkCPP,QAlCO,yCAkCG,WAAO1Q,GAAP,UAAA6R,EAAA,+EAEA,EAAKxB,MAAM,EAAKO,OAAO7F,GAAa2F,QAAS,CAAE1Q,SAF/C,iGAIN,EAAKiR,aAAL,OAJM,wDAlCH,wDA0CPN,SA1CO,yCA0CI,WAAOrN,GAAP,UAAAuO,EAAA,+EAID,EAAKxB,MAAM,EAAKO,OAAO7F,GAAa4F,SAAU,GAAIrN,IAJjD,iGAMP,EAAK2N,aAAL,OANO,wDA1CJ,wDADhB,4BAAwCf,ICQlC4B,GAAS,IAAIF,GAENG,GAAb,WACC,aAAsB,qBACrBJ,KAAKpB,IAAMoB,KAAKpB,IAAIyB,KAAKL,MACzBA,KAAKnB,OAASmB,KAAKnB,OAAOwB,KAAKL,MAHjC,+IAYE,OAZF,SAYQM,atCjBwB,oBsCiBI,SAACJ,GAAD,OAAOK,GAAgBL,EAAG,EAAKtB,QAZnE,OAaE,OAbF,SAaQ0B,atCjB2B,uBsCiBI,SAACJ,GAAD,OACpCK,GAAgBL,EAAG,EAAKrB,WAd3B,kFAkBclJ,GAlBd,wEAmBE,OAnBF,SAmBQ6K,aAAI7R,EAA8B,CAAE8R,MAAM,KAnBlD,OAqBmB,OArBnB,SAqByBN,GAAOvB,IAAIjJ,EAAO/G,SArB3C,OAuBE,OAFM2Q,EArBR,gBAuBQiB,aAAI7R,EAA8B,CAAE8R,MAAM,KAvBlD,UAyB0B,MAApBlB,EAASG,OAzBf,iBA0BG,OA1BH,UA0BSc,aAAI7R,KA1Bb,QA2BGoP,OAAO2C,SAASzE,KAAhB,uCAAuDsD,EAAS7J,KAAKrH,KA3BxE,wBA6BG,OA7BH,UA6BSmS,aAAI7R,EAA2B4Q,EAAS7J,KAAK3G,QA7BtD,sFAiCiB4G,GAjCjB,wEAkCE,OAlCF,SAkCQ6K,aAAI7R,EAA8B,CAAE8R,MAAM,KAlClD,OAoCmB,OApCnB,SAoCyBN,GAAOtB,OAAOlJ,EAAO/G,SApC9C,OAsCE,OAFM2Q,EApCR,gBAsCQiB,aAAI7R,EAA8B,CAAE8R,MAAM,KAtClD,UAwC0B,MAApBlB,EAASG,OAxCf,iBAyCG,OAzCH,UAyCSc,aACLtH,GAA6B,CAC5BrI,KAAM0O,EAAS7J,KAAKvB,KAAKtD,KACzB8H,gBAAiB4G,EAAS7J,KAAKvB,KAAKwE,mBA5CzC,QA+CG,OA/CH,UA+CS6H,aAAI7R,KA/Cb,QAiDG0P,GAAmBuB,QAAQC,gBAAgB,CAC1CC,QAAS,wBACTC,MAAO,UACP5B,SAAU,OApDd,wBAuDG,OAvDH,UAuDSqC,aAAI7R,EAA2B4Q,EAAS7J,KAAK3G,QAvDtD,iFAQE,OADa,IAAIqR,GACLO,YARd,KCPMR,GAAS,IAAIF,GAENW,GAAb,WACE,aAAsB,qBACpBZ,KAAKa,KAAOb,KAAKa,KAAKR,KAAKL,MAF/B,+IAWI,OAXJ,SAWUM,alBlB2B,yBkBkBM,SAAAJ,GAAC,OAAIK,GAAgBL,EAAG,EAAKW,SAXxE,mFAcgBlL,GAdhB,wEAeI,OAfJ,SAeU6K,aAAItH,GAA6B,CAAEuH,MAAM,KAfnD,OAiBqB,OAjBrB,SAiB2BN,GAAOpB,QAAQpJ,EAAO/G,QAAQP,KAjBzD,UAmB8B,OAFpBkR,EAjBV,QAmBmBG,OAnBnB,oBAoB4B,OAAlBH,EAAS7J,KApBnB,iBAqBQ,OArBR,SAqBc8K,aACJtH,GAA0B,CACxBnK,MAAO,2BAvBnB,+BA2BQ,OA3BR,UA2BcyR,aACJtH,GAA6B,CAC3BrI,KAAM0O,EAAS7J,KAAKvB,KAAKtD,KACzB8H,gBAAiB1L,EAAWsS,EAAS7J,KAAKvB,KAAKwE,oBA9B3D,QAiCQ,OAjCR,UAiCc6H,aACJjR,EAAkB,CAChBoJ,gBAAiB4G,EAAS7J,KAAKvB,KAAKwE,mBAnChD,QAyCI,OAzCJ,UAyCU6H,aAAItH,GAA6B,CAAEuH,MAAM,KAzCnD,iFAOI,OADa,IAAIG,GACLD,YAPhB,KCHMR,GAAS,IAAIF,GAENa,GAAb,WACE,aAAsB,qBACpBd,KAAKa,KAAOb,KAAKa,KAAKR,KAAKL,MAC3BA,KAAKlB,OAASkB,KAAKlB,OAAOuB,KAAKL,MAHnC,+IAYI,OAZJ,SAYUM,aVnBuB,qBUmBM,SAAAJ,GAAC,OAAIK,GAAgBL,EAAG,EAAKW,SAZpE,OAaI,OAbJ,SAaUP,aVjBoB,kBUiBM,SAAAJ,GAAC,OAAIK,GAAgBL,EAAG,EAAKpB,WAbjE,mFAgBgBnJ,GAhBhB,wEAiBI,OAjBJ,SAiBU6K,aAAIpD,GAA0B,CAAEqD,MAAM,KAjBhD,OAmBqB,OAnBrB,SAmB2BN,GAAOnB,UAAUrJ,GAAU,IAAI/G,SAnB1D,UAqB4B,OAFlB2Q,EAnBV,QAqBiBG,OArBjB,iBAsBM,OAtBN,SAsBYc,aAAIpD,GAA0B,CAAEG,KAAMgC,EAAS7J,KAAKqL,SAtBhE,OAuBM,OAvBN,UAuBYP,aACJ1D,GAAuB,CACrBG,WAAYsC,EAAS7J,KAAKuH,WAC1B/L,YAAaqO,EAAS7J,KAAKxE,eA1BrC,gCA8BM,OA9BN,UA8BYsP,aAAIpD,GAAuB,CAAErO,MAAOwQ,EAAS7J,KAAK3G,SA9B9D,QAiCI,OAjCJ,UAiCUyR,aAAIpD,GAA0B,CAAEqD,MAAM,KAjChD,sFAoCkB9K,GApClB,wEAqCI,OArCJ,SAqCU6K,aAAIpD,GAA0B,CAAEqD,MAAM,KArChD,OAuCqB,OAvCrB,SAuC2BN,GAAOrB,OAAOnJ,EAAO/G,QAAQP,KAvCxD,UAyC4B,OAFlBkR,EAvCV,QAyCiBG,OAzCjB,iBA0CM,OA1CN,SA0CYc,aAAIpD,GAA0B,CAAEG,KAAMgC,EAAS7J,KAAKqL,SA1ChE,OA2CM,OA3CN,UA2CYP,aACJ1D,GAAuB,CACrBG,WAAYsC,EAAS7J,KAAKuH,WAC1B/L,YAAa,KA9CvB,gCAkDM,OAlDN,UAkDYsP,aAAIpD,GAAuB,CAAErO,MAAOwQ,EAAS7J,KAAK3G,SAlD9D,QAqDI,OArDJ,UAqDUyR,aAAIpD,GAA0B,CAAEqD,MAAM,KArDhD,iFAQI,OADa,IAAIK,GACLH,YARhB,K,8BCSMR,GAAS,ICbf,YACE,aAAe,IAAD,+BACZ,8CAAM,cAGDpB,QAJO,yCAIG,gCAAAmB,EAAA,6DACf7K,EADe,EACfA,eACAC,EAFe,EAEfA,QAFe,kBAQA,EAAKoJ,MAAMsC,IAAX,UACR,EAAKvC,IADG,iBACSpJ,EADT,YAC2BC,IAT3B,iGAYN,EAAKgK,aAAL,OAZM,yDAJH,wDAoBPN,SApBO,wBAoBI,uBAAAkB,EAAA,0FApBJ,EAsBPtB,IAtBO,wBAsBD,uBAAAsB,EAAA,0FAtBC,EAwBPrB,OAxBO,yCAwBE,WAAOnJ,GAAP,UAAAwK,EAAA,+EAEC,EAAKxB,MAAM8B,IAAX,UACR,EAAK/B,IADG,iBACS/I,EAAKL,eADd,YACgCK,EAAKJ,SAChD,CACEtE,SAAU0E,EAAKhE,OACX,CACEA,OAAO,gBACJgE,EAAK7E,KAAO,CACXc,OAAO,gBACJ+D,EAAKN,MAAQ,CACZlF,MAAOwF,EAAKxF,WAMtB,CACEe,MAAM,gBACHyE,EAAK/E,KADH,gBAEA+E,EAAK7E,KAAO,CACXc,OAAO,gBACJ+D,EAAKN,MAAQ,CACZlF,MAAOwF,EAAKxF,cAvBpB,iGAiCL,EAAKoP,aAAL,OAjCK,wDAxBF,wDA6DPR,OA7DO,wBA6DE,uBAAAoB,EAAA,0FA7DF,EADhB,4BAAoC3B,KDevB0C,GAAb,WACE,aAAsB,qBACpBjB,KAAKa,KAAOb,KAAKa,KAAKR,KAAKL,MAC3BA,KAAKnB,OAASmB,KAAKnB,OAAOwB,KAAKL,MAC/BA,KAAKkB,SAAWlB,KAAKkB,SAASb,KAAKL,MAJvC,+IAaI,OAbJ,SAaUM,avCdqB,mBuCcM,SAACJ,GAAD,OAAOK,GAAgBL,EAAG,EAAKW,SAbpE,OAcI,OAdJ,SAcUP,avCbuB,qBuCaM,SAACJ,GAAD,OAAOK,GAAgBL,EAAG,EAAKrB,WAdtE,OAeI,OAfJ,SAeUyB,avC/BgB,cuC+BM,SAACJ,GAAD,OAAOK,GAAgBL,EAAG,EAAKgB,aAf/D,mFAmBIvL,GAnBJ,0EAqB0B,OArB1B,SAqBgCzC,cAAO,SAACtD,GAAD,OAAuBA,EAAMC,SArBpE,OAuBI,OAFMmB,EArBV,gBAuBUwP,aAAIjR,EAAwB,CAAEkR,MAAM,KAvB9C,OAyB0B,OAzB1B,SAyBgCN,GAAOpB,QAAQpJ,EAAO/G,SAzBtD,UA2B4B,OAFlB2Q,EAzBV,QA2BiBG,OA3BjB,oBA4B4B,OAAlBH,EAAS7J,KA5BnB,iBA6BQ,OA7BR,UA6Bc8K,aACJjR,EAAqB,CAAER,MAAO,mCA9BxC,gCAiCQ,OAjCR,UAiCcyR,aACJjR,EAAkB,CAChBgG,QAAQ,EACRoD,gBAAiB4G,EAAS7J,KAAKvB,KAAKwE,gBACpCtK,IAAKkR,EAAS7J,KAAKvB,KAAK9F,IACxBwC,KAAM0O,EAAS7J,KAAKvB,KAAKtD,KACzBG,SAAUmQ,KACRnQ,EAASA,SACTuO,EAAS7J,KAAKvB,KAAKnD,UAErBE,YAAawF,OAAOC,KAAK4I,EAAS7J,KAAKvB,KAAKnD,SAASC,OAAO,MA3CxE,gCAgDM,OAhDN,UAgDYuP,aAAIjR,EAAqB,CAAER,MAAOwQ,EAAS7J,KAAK3G,SAhD5D,QAmDI,OAnDJ,UAmDUyR,aAAIjR,EAAwB,CAAEkR,MAAM,KAnD9C,sFAsDkB9K,GAtDlB,kEAuDI,OAvDJ,SAuDUwK,GAAOtB,OAAOlJ,EAAO/G,SAvD/B,uFA0DoB+G,GA1DpB,2EA2DYgD,EAAoBhD,EAAO/G,QAA3B+J,gBAEHyI,OAAO,yBAAyBC,KAAKjO,OAAOuF,IA7DrD,gBA8DM,OA9DN,SA8DY6H,aACJjR,EAA4B,CAC1BR,MAAO,8CAhEjB,iCAoEOqS,OAAO,yDAAyDC,KAC/DjO,OAAOuF,IArEf,iBAwEM,OAxEN,SAwEY6H,aACJjR,EAA4B,CAC1BR,MAAO,wDA1EjB,+BA8EM,OA9EN,UA8EYyR,aAAIjR,EAAuBoG,EAAO/G,UA9E9C,QAgFM,OAhFN,UAgFY4R,aAAIjR,EAAwB,CAAEkR,MAAM,KAhFhD,QAkFM,OAlFN,UAkFYa,aAAM,KAlFlB,QAmFM,OAnFN,UAmFYd,aAAIjR,EAAwB,CAAEkR,MAAM,KAnFhD,iFASI,OADa,IAAIQ,GACLN,YAThB,K,aELiBJ,IATJgB,GAAQ,WAAG,SAAUC,IAAV,kEACtB,OADsB,SAChBC,aAAI,CACRrB,GAAmBsB,aACnBd,GAAkBc,aAClBZ,GAAeY,aACfT,GAAaS,eALO,oCAAUF,MAS3B,SAAUjB,GAAgB5K,EAAagM,GAAvC,kEAEH,OAFG,kBAEGA,EAAKhM,GAFR,sDAIH6J,QAAQzQ,MAAR,MAJG,qDCfA,ICeD6S,GAAiC,CACrC/Q,KAAM,GACN3D,KAAMD,EDjBgB,48DCkBtB2M,OAAQ,OACRhB,WAAW,EACX7J,MAAO,IAGI8S,GAAb,WACE,aAAe,qBACb7B,KAAK8B,OAAS9B,KAAK8B,OAAOzB,KAAKL,MAFnC,sDAauB,IAFnBpQ,EAEkB,uDAFQgS,GAC1BjM,EACkB,uCACdoM,EAAQ,eAAQnS,GAEpB,OAAQ+F,EAAO9G,MACb,IxBxCiC,0BwByC/BkT,EAAS7U,KAAOyI,EAAO/G,QAAQ1B,KAC/B,MACF,IxB1CmC,4BwB2CjC6U,EAASnI,OAASjE,EAAO/G,QAAQgL,OACjC,MACF,IxBvCiC,0BwBwC/BmI,EAASnJ,UAAYjD,EAAO/G,QAAQ6R,KACpC,MACF,IxB7CiC,0BwB8C/BsB,EAASlR,KAAO8E,EAAO/G,QAAQiC,KAC/BkR,EAAS7U,KAAOyI,EAAO/G,QAAQ+J,gBAC/B,MACF,IxBhD6B,sBwBiD3BoJ,EAAShT,MAAQ4G,EAAO/G,QAAQG,MAChC,MACF,IxB/C2B,oBwBgDzBgT,EAAQ,eAAQH,IAIpB,OAAOG,KAtCX,gCAOI,OADgB,IAAIF,GACLC,WAPnB,KCXMF,GAAkC,CACtC/Q,KAAM,GACNgK,UAAU,EACVjC,WAAW,EACX7J,MAAO,CACLkM,IAAK,GACL+G,OAAQ,KAICC,GAAb,WAEE,aAAe,qBACbjC,KAAK8B,OAAS9B,KAAK8B,OAAOzB,KAAKL,MAHnC,sDAcwB,IAFpBpQ,EAEmB,uDAFQgS,GAC3BjM,EACmB,uCACfoM,EAAQ,eAAQnS,GAEpB,OAAQ+F,EAAO9G,MACb,I9CrCiC,0B8CsC/BkT,EAASlH,UAAW,EACpBkH,EAASlR,KAAOuC,OAAOuC,EAAO/G,SAC9B,MACF,I9CxCkC,2B8CyChCmT,EAAQ,eAAQH,IAChB,MACF,I9CzCkC,2B8C0ChCG,EAASlR,KAAO8E,EAAO/G,QAAQiC,KAC/B,MACF,I9C1CkC,2B8C2ChCkR,EAASnJ,UAAYjD,EAAO/G,QAAQ6R,KACpC,MACF,I9CvC8B,uB8CwC5BsB,EAAShT,MAAT,eAAsB4G,EAAO/G,SAIjC,OAAOmT,KApCX,gCAQI,OADgB,IAAIE,GACLH,WARnB,K,UCZMF,GAA8B,CAClCrE,KAAM,GACN3E,WAAW,EACX7J,MAAO,IAGImT,GAAb,WACE,aAAe,qBACblC,KAAK8B,OAAS9B,KAAK8B,OAAOzB,KAAKL,MAFnC,sDAaoB,IAFhBpQ,EAEe,uDAFQgS,GACvBjM,EACe,uCACToM,EAAQ,eAAQnS,GAEtB,OAAQ+F,EAAO9G,MACb,IjB9B6B,sBiB+B3BkT,EAASxE,KAAT,aAAoB5H,EAAO/G,QAAQ2O,MACnCwE,EAAShT,MAAQ,GACjB,MACF,IjB/B6B,sBiBgC3BgT,EAASnJ,UAAYjD,EAAO/G,QAAQ6R,KACpC,MACF,IjBpCyB,kBiBqCvBsB,EAAShT,MAAQ4G,EAAO/G,QAAQG,MAIpC,OAAOgT,KA7BX,gCAOI,OADgB,IAAIG,GACLJ,WAPnB,KCXMF,GAA4B,CAChC/G,UAAU,GAGCsH,GAAb,WACE,aAAe,qBACbnC,KAAK8B,OAAS9B,KAAK8B,OAAOzB,KAAKL,MAFnC,sDAakB,IAFdpQ,EAEa,uDAFQgS,GACrBjM,EACa,uCACPoM,EAAQ,eAAQnS,GAEtB,OAAQ+F,EAAO9G,MACb,I1B1BqB,c0B2BnBkT,EAASlH,UAAW,EACpB,MACF,I1B5BsB,qB0B6BpBkH,EAASlH,UAAW,EAIxB,OAAOkH,KAzBX,gCAOI,OADgB,IAAII,GACLL,WAPnB,KCHMF,GAAiC,CACrC3E,WAAY,EACZ/L,YAAa,GAGFkR,GAAb,WACE,aAAe,qBACbpC,KAAK8B,OAAS9B,KAAK8B,OAAOzB,KAAKL,MAFnC,sDAauB,IAFnBpQ,EAEkB,uDAFQgS,GAC1BjM,EACkB,uCACdoM,EAAQ,eAAQnS,GAEpB,OAAQ+F,EAAO9G,MACb,IrB1ByB,kBqB2BvBkT,EAAQ,eAAQA,EAAR,GAAqBpM,EAAO/G,SACpC,MACF,IrB5BqC,8BqB6BnCmT,EAAS7Q,YAAcyE,EAAO/G,QAAQsC,YAI1C,OAAO6Q,KAzBX,gCAOI,OADgB,IAAIK,GACLN,WAPnB,KCgCMO,GAAqB,SAC1BxT,EACAkE,GAEA,OAAQlE,GACP,KAAKhC,EAAsBgF,SAC1B,OAAO,EACR,KAAKhF,EAAsBqG,OAC1B,OAAOH,EAAQ,GAAG7C,MACnB,KAAKrD,EAAsBuD,MAC1B,OAAOH,GAAO,GAAGC,MAClB,KAAKrD,EAAsBF,KAC1B,OAAO4D,GAAM,GAAGL,QAINoS,GAAb,WACC,aAAe,qBACdtC,KAAK8B,OAAS9B,KAAK8B,OAAOzB,KAAKL,MAFjC,sDAaiB,IAFfpQ,EAEc,uDA9CuB,CACtCF,eAAe,EACfmB,KAAM,GACN0E,QAAQ,EACRrE,YAAa,KACb2D,YAAa,GACb7D,SAAU,CACTC,MAAO,GACPS,OAAQ,IAETI,kBAActD,EACdmK,gBAAiB,GACjB5J,MAAO,GACP6J,WAAW,GAgCVjD,EACc,uCACVoM,EAAQ,eAAQnS,GAEpB,OAAQ+F,EAAO9G,MACd,IhDrE4B,mBgDsE3BkT,EAAWZ,KACV,GApDkC,CACtCzR,eAAe,EACfmB,KAAM,GACN0E,QAAQ,EACRrE,YAAa,KACb2D,YAAa,GACb7D,SAAU,CACTC,MAAO,GACPS,OAAQ,IAETI,kBAActD,EACdmK,gBAAiB,GACjB5J,MAAO,GACP6J,WAAW,GAyCPjD,EAAO/G,UAECc,eAAgB,EACzB,MAED,IhD3E4B,kBgD4EtBqS,EAAS/Q,SAASC,MAAM0E,EAAO/G,QAAQiC,QAC3CkR,EAAS/Q,SAASC,MAAM0E,EAAO/G,QAAQiC,MAAQ,GAE/CkR,EAAS7Q,YAAcwF,OAAOC,KAC7BoL,EAAS/Q,SAASC,OACjB,IAEH,MAED,IhDtFiC,uBgDuF3B8Q,EAAS/Q,SAASU,OAAOiE,EAAO/G,QAAQiC,QAC5CkR,EAAS/Q,SAASU,OAAOiE,EAAO/G,QAAQiC,MAAQ,CAC/Cc,OAAQ,KAIV+E,OAAOC,KAAKhB,EAAO/G,QAAQ+C,QAAQ4Q,SAAQ,SAAC5K,GAEzCoK,EAAS/Q,SAASU,OAAOiE,EAAO/G,QAAQiC,MAAMc,OAC9CgG,KAGDoK,EAAS/Q,SAASU,OAAOiE,EAAO/G,QAAQiC,MAAMc,OAC7CgG,GACG,CACHzH,MAAOmS,GACN1M,EAAO/G,QAAQ+C,OAAOgG,GAAU9I,KAChC8G,EAAO/G,QAAQ+C,OAAOgG,GAAU5E,cAOlCgP,EAAS/Q,SAASC,MAAM0E,EAAO/G,QAAQ+B,MACvCgF,EAAO/G,QAAQiC,QAGhBkR,EAAS/Q,SAASC,MAAM0E,EAAO/G,QAAQ+B,MACtCgF,EAAO/G,QAAQiC,MACZ,CACHc,OAAQ,GACRD,OAAQiE,EAAO/G,QAAQ8C,QAGxBgF,OAAOC,KAAKhB,EAAO/G,QAAQ+C,QAAQ4Q,SAAQ,SAAC5K,GAC3CoK,EAAS/Q,SAASC,MAAM0E,EAAO/G,QAAQ+B,MACtCgF,EAAO/G,QAAQiC,MACdc,OAAOgG,GAAY,CACpBzH,MAAOyF,EAAO/G,QAAQ8C,YACnBlD,EACA6T,GACA1M,EAAO/G,QAAQ+C,OAAOgG,GAAU9I,KAChC8G,EAAO/G,QAAQ+C,OAAOgG,GAAU5E,SAEnClE,KAAM8G,EAAO/G,QAAQ+C,OAAOgG,GAAU9I,KACtCkE,QAAS4C,EAAO/G,QAAQ+C,OAAOgG,GAAU5E,aAI5C,MAED,IhDvImC,yBgDwIlCgP,EAAS7Q,YAAcyE,EAAO/G,QAAQiC,KACtC,MAED,IhD7IwB,cgD8IvBkR,EA/HmC,CACtCrS,eAAe,EACfmB,KAAM,GACN0E,QAAQ,EACRrE,YAAa,KACb2D,YAAa,GACb7D,SAAU,CACTC,MAAO,GACPS,OAAQ,IAETI,kBAActD,EACdmK,gBAAiB,GACjB5J,MAAO,GACP6J,WAAW,GAmHR,MAED,IhD9IkC,wBgD+I7BjD,EAAO/G,QAAQ8C,OAClBqQ,EAAS/Q,SAASU,OAAOiE,EAAO/G,QAAQiC,MAAMc,OAC7CgE,EAAO/G,QAAQwG,OACdlF,MAAQyF,EAAO/G,QAAQsB,MAEzB6R,EAAS/Q,SAASC,MAAM0E,EAAO/G,QAAQ+B,MACtCgF,EAAO/G,QAAQiC,MACdc,OAAOgE,EAAO/G,QAAQwG,OAAOlF,MAAQyF,EAAO/G,QAAQsB,MAEvD,MAED,IhDzJoC,0BgD0JnC6R,EAASjQ,aAAe6D,EAAO/G,QAAQiC,KACvC,MAED,IhD5J2B,iBgD6J1BkR,EAASxM,OAASI,EAAO/G,QAAQ2G,OACjC,MAED,IhDpKmC,yBgDqKlCwM,EAASlN,YAAcc,EAAO/G,QAAQG,MACtC,MACD,IhDlK8B,oBgDmK7BgT,EAASnJ,UAAYjD,EAAO/G,QAAQ6R,KACpC,MACD,IhDlK0B,gBgDmKzBsB,EAAShT,MAAQ4G,EAAO/G,QAAQG,MAIlC,OAAOgT,KAhIT,gCAOE,OADgB,IAAIO,GACLR,WAPjB,KClDaU,GAAcC,aAA4B,CACrDzF,WAAYoF,GAAkBM,SAC9B7S,MAAOyS,GAAaI,SACpB9H,YAAaqH,GAAmBS,SAChC/I,WAAYkI,GAAkBa,SAC9BpF,QAAS4E,GAAeQ,SACxB9G,MAAOuG,GAAaO,W,WCPhBC,GCFC,SAAwBf,GAC7B,IAAMgB,EAAiBC,eAEjBC,EAAc,CAACF,GACfG,EAAWC,aAAQC,KAAe,WAAf,EAAmBH,IAEtCH,EAAQO,aAAYV,GAAaZ,EAAcmB,GAGrD,OAFAH,EAAeO,IAAI5B,IAEZoB,EDPKS,GACRC,GAAcC,SAASC,eAAe,QAC5CC,iBACE,gBAAC,IAAD,CAAUb,MAAOA,IACf,iBlBDe,kBACjB,kBAAC,IAAD,CAAec,SAAS,0BACtB,kBAAC,IAAD,CAAoBxJ,IAAKoE,KACzB,kBAAC,IAAD,CAAOqF,KAAK,iBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,GAAD,KACE,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CAAOA,KAAK,mCACV,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOnO,QAAQ,MAGnB,kBAAC,IAAD,CAAOmO,KAAK,oBACV,kBAAC,GAAD,KACE,kBAAC,GAAD,WkBjBJ,OAEFL,M","file":"static/js/main.0f21a82f.chunk.js","sourcesContent":["export enum EditorModes {\n  edit,\n  create,\n}\n","import React from 'react'\nimport { Dimmer, Loader as BasicLoader } from 'semantic-ui-react'\n\ninterface ILoaderProps {\n  text?: string\n}\n\nexport const Loader = ({ text = 'Loading...' }: ILoaderProps) => (\n  <Dimmer active={true} inverted={true}>\n    <BasicLoader size='medium' content={<h3>{text}</h3>} />\n  </Dimmer>\n)\n","const beautifyCode = require('js-beautify').html\n\nexport const formatCode = (code: string) =>\n  beautifyCode(code, {\n    indent_size: '4',\n    indent_char: ' ',\n    max_preserve_newlines: '-1',\n    preserve_newlines: false,\n    keep_array_indentation: false,\n    break_chained_methods: false,\n    indent_scripts: 'normal',\n    brace_style: 'collapse',\n    space_before_conditional: true,\n    unescape_strings: false,\n    jslint_happy: false,\n    end_with_newline: false,\n    wrap_line_length: '70',\n    indent_inner_html: false,\n    comma_first: false,\n    e4x: true,\n    indent_empty_lines: false,\n  })\n","export enum ConfigurationElements {\n  select,\n  optional,\n  color,\n  size,\n  circular,\n}\n","import { EditorModes } from '../enums/EditorModes'\nimport { useParams } from 'react-router-dom'\n\nexport const useEditorModes = (): { _id?: string; mode: EditorModes } => {\n  const { _id } = useParams()\n  let mode: EditorModes\n\n  if (_id === undefined) {\n    mode = EditorModes.create\n  } else {\n    mode = EditorModes.edit\n  }\n\n  return { _id, mode }\n}\n","import { FormErrors } from '../../shared/types/FormErrors'\nimport { IApplicationDTO } from '../../shared/types/IApplicationDTO'\n\nexport const EDITOR_MODAL_OPEN_MODAL = 'EDITOR_MODAL_OPEN_MODAL'\nexport const EDITOR_MODAL_CLOSE_MODAL = 'EDITOR_MODAL_CLOSE_MODAL'\n\nexport const EDITOR_MODAL_CHANGE_NAME = 'EDITOR_MODAL_CHANGE_NAME'\n\nexport const EDITOR_MODAL_SET_PENDING = 'EDITOR_MODAL_SET_PENDING'\n\nexport const EDITOR_MODAL_ADD = 'EDITOR_MODAL_ADD'\nexport const EDITOR_MODAL_UPDATE = 'EDITOR_MODAL_UPDATE'\n\nexport const EDITOR_MODAL_SUCCESS = 'EDITOR_MODAL_SUCCESS'\nexport const EDITOR_MODAL_FAILURE = 'EDITOR_MODAL_FAILURE'\n\nexport const editorModalActions = {\n  openModal: (payload?: string) => ({\n    type: EDITOR_MODAL_OPEN_MODAL,\n    payload,\n  }),\n\n  closeModal: () => ({\n    type: EDITOR_MODAL_CLOSE_MODAL,\n  }),\n\n  changeName: (payload: { name: string }) => ({\n    type: EDITOR_MODAL_CHANGE_NAME,\n    payload,\n  }),\n\n  add: (payload: IApplicationDTO) => ({\n    type: EDITOR_MODAL_ADD,\n    payload,\n  }),\n\n  update: (payload: IApplicationDTO) => ({\n    type: EDITOR_MODAL_UPDATE,\n    payload,\n  }),\n\n  success: () => ({\n    type: EDITOR_MODAL_SUCCESS,\n  }),\n\n  failure: (payload: { msg: string; errors: FormErrors }) => ({\n    type: EDITOR_MODAL_FAILURE,\n    payload,\n  }),\n\n  setPending: (payload: { flag: boolean }) => ({\n    type: EDITOR_MODAL_SET_PENDING,\n    payload,\n  }),\n}\n","import React from 'react'\nimport { Message, Segment } from 'semantic-ui-react'\n\ninterface IErrorMessage {\n  error: string\n}\n\nexport const ErrorMessage = ({ error }: IErrorMessage) => (\n  <Segment className='error-message' padded={true} basic={true}>\n    <Message size='big' negative={true}>\n      <Message.Header>{error}</Message.Header>\n    </Message>\n  </Segment>\n)\n","import { IParams } from '../../shared/types/IParams'\nimport { ISettingDTO } from '../../shared/types/ISettingDTO'\nimport { IPanelState } from './state'\n\nexport const PANEL_INIT = 'PANEL_INIT'\n\nexport const PANEL_VALIDATE = 'PANEL_VALIDATE'\nexport const PANEL_VALIDATED = 'PANEL_VALIDATED'\n\nexport const PANEL_INIT_COMPONENT = 'PANEL_INIT_COMPONENT'\nexport const PANEL_INIT_PAGE = 'PANEL_INIT_PAGE'\nexport const PANEL_CLEAR = 'PANEL_CLEAR'\nexport const PANEL_SET_RENDER_ERROR = 'PANEL_SET_RENDER_ERROR'\nexport const PANEL_SET_CURRENT_PAGE = 'PANEL_SET_CURRENT_PAGE'\nexport const PANEL_SET_FIELD_VALUE = 'PANEL_SET_FIELD_VALUE'\nexport const PANEL_SET_FOCUSED_FIELD = 'PANEL_SET_FOCUSED_FIELD'\nexport const PANEL_SET_MODE = 'PANEL_SET_MODE'\nexport const PANEL_SET_PENDING = 'PANEL_SET_PENDING'\n// only online mode\nexport const PANEL_LOAD_DATA = 'PANEL_LOAD_DATA'\nexport const PANEL_FAILURE = 'PANEL_FAILURE'\nexport const PANEL_UPDATE_DATA = 'PANEL_UPDATE_DATA'\n\nexport const panelActions = {\n  init: (payload?: Partial<IPanelState>) => ({\n    type: PANEL_INIT,\n    payload,\n  }),\n\n  validate: (payload?: Partial<IPanelState>) => ({\n    type: PANEL_VALIDATE,\n    payload,\n  }),\n\n  validated: (payload?: Partial<IPanelState>) => ({\n    type: PANEL_VALIDATED,\n    payload,\n  }),\n\n  initComponent: (payload: {\n    page: string\n    name: string\n    params: IParams\n    common?: boolean\n  }) => ({\n    type: PANEL_INIT_COMPONENT,\n    payload,\n  }),\n\n  initPage: (payload: { name: string }) => ({\n    type: PANEL_INIT_PAGE,\n    payload,\n  }),\n\n  clear: () => ({\n    type: PANEL_CLEAR,\n  }),\n\n  setCurrentPage: (payload: { name: string }) => ({\n    type: PANEL_SET_CURRENT_PAGE,\n    payload,\n  }),\n\n  setFieldValue: (payload: {\n    value: any\n    name: string\n    page: string\n    param: string\n    common?: boolean\n  }) => ({\n    type: PANEL_SET_FIELD_VALUE,\n    payload,\n  }),\n\n  setFocusedField: (payload: { name: string | undefined }) => ({\n    type: PANEL_SET_FOCUSED_FIELD,\n    payload,\n  }),\n\n  setMode: (payload: { online: boolean }) => ({\n    type: PANEL_SET_MODE,\n    payload,\n  }),\n\n  setRenderError: (payload: { error: string }) => ({\n    type: PANEL_SET_RENDER_ERROR,\n    payload,\n  }),\n\n  loadData: (payload: { application_id: string; user_id: string }) => ({\n    type: PANEL_LOAD_DATA,\n    payload,\n  }),\n\n  updateData: (payload: ISettingDTO) => ({\n    type: PANEL_UPDATE_DATA,\n    payload,\n  }),\n\n  setPending: (payload: { flag: boolean }) => ({\n    type: PANEL_SET_PENDING,\n    payload,\n  }),\n\n  failure: (payload: { error: string }) => ({\n    type: PANEL_FAILURE,\n    payload,\n  }),\n}\n","import React, { ReactElement, ReactNode, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { panelActions } from '../../Panel/actions'\nimport './index.css'\nimport { IRootState } from '../../../store/state'\n\ninterface IAppProps {\n  children: ReactNode\n}\n\nexport const App = ({ children }: IAppProps): ReactElement | null => {\n  const { isInitialized } = useSelector((state: IRootState) => state.panel)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!isInitialized) {\n      dispatch(panelActions.init())\n    }\n  }, [isInitialized, dispatch])\n\n  if (isInitialized) {\n    return <div className='app'>{children}</div>\n  }\n\n  return null\n}\n","export const colors = [\n  {\n    text: 'Green',\n    value: 'green',\n    label: { color: 'green', empty: true, circular: true },\n  },\n  {\n    text: 'Orange',\n    value: 'orange',\n    label: { color: 'orange', empty: true, circular: true },\n  },\n  {\n    text: 'Red',\n    value: 'red',\n    label: { color: 'red', empty: true, circular: true },\n  },\n\n  {\n    text: 'Yellow',\n    value: 'yellow',\n    label: { color: 'yellow', empty: true, circular: true },\n  },\n  {\n    text: 'Olive',\n    value: 'olive',\n    label: { color: 'olive', empty: true, circular: true },\n  },\n\n  {\n    text: 'Teal',\n    value: 'teal',\n    label: { color: 'teal', empty: true, circular: true },\n  },\n  {\n    text: 'Blue',\n    value: 'blue',\n    label: { color: 'blue', empty: true, circular: true },\n  },\n  {\n    text: 'Violet',\n    value: 'violet',\n    label: { color: 'violet', empty: true, circular: true },\n  },\n  {\n    text: 'Purple',\n    value: 'purple',\n    label: { color: 'purple', empty: true, circular: true },\n  },\n  {\n    text: 'Pink',\n    value: 'pink',\n    label: { color: 'pink', empty: true, circular: true },\n  },\n  {\n    text: 'Brown',\n    value: 'brown',\n    label: { color: 'brown', empty: true, circular: true },\n  },\n  {\n    text: 'Grey',\n    value: 'grey',\n    label: { color: 'grey', empty: true, circular: true },\n  },\n  {\n    text: 'Black',\n    value: 'black',\n    label: { color: 'black', empty: true, circular: true },\n  },\n]\n","export const sizes = [\n  { text: 'Tiny', value: 'tiny' },\n  { text: 'Small', value: 'small' },\n  { text: 'Medium', value: 'medium' },\n  { text: 'Large', value: 'large' },\n  { text: 'Big', value: 'big' },\n]\n","import React, { ReactElement, ReactNode, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { IRootState } from '../../store/state'\nimport { panelActions } from '../Panel/actions'\n\ninterface IPageProps {\n  name: string\n  children: ReactNode\n}\n\nexport const PageContext = React.createContext({ page: '' })\n\nexport const Page = ({ name, children }: IPageProps): ReactElement | null => {\n  const dispatch = useDispatch()\n\n  if (typeof name !== 'string') {\n    dispatch(\n      panelActions.setRenderError({\n        error:\n          'Page component error: Name is required field and must be a string.',\n      }),\n    )\n  } else if (typeof children === 'undefined') {\n    dispatch(\n      panelActions.setRenderError({\n        error: `Page component error: Page \"${name}\" is empty.`,\n      }),\n    )\n  }\n\n  const isPageInitialized = Boolean(\n    useSelector((state: IRootState) => state.panel.settings.pages[name]),\n  )\n  const { currentPage, isInitialized } = useSelector(\n    (state: IRootState) => state.panel,\n  )\n\n  const initPage = useCallback(() => {\n    dispatch(panelActions.initPage({ name }))\n  }, [dispatch, name])\n\n  useEffect(() => {\n    if (!isPageInitialized || !isInitialized) {\n      initPage()\n    }\n  }, [initPage, isInitialized, isPageInitialized])\n\n  if (isPageInitialized) {\n    return (\n      <PageContext.Provider value={{ page: name }}>\n        {\n          <div className={`app__page ${currentPage !== name && 'none'}`}>\n            {children}\n          </div>\n        }\n      </PageContext.Provider>\n    )\n  }\n\n  return null\n}\n","import { useContext } from 'react'\nimport { PageContext } from '../../app/interfaceElements/Page'\n\nexport const usePageContext = (): string => {\n  const { page } = useContext(PageContext)\n\n  return page\n}\n","import { useSelector } from 'react-redux'\nimport { IRootState } from '../../store/state'\nimport { usePageContext } from './usePageContext'\nimport { IParams } from '../types/IParams'\n\nexport const useFieldValue = (\n  name: string,\n  initialParams: IParams,\n  common?: boolean,\n): any => {\n  const page = usePageContext()\n\n  return useSelector((state: IRootState) => {\n    const isInitialized = Boolean(state.panel.settings.pages[page][name])\n    let params: any\n\n    if (isInitialized) {\n      if (common) {\n        params = state.panel.settings.common[name].params\n      } else {\n        params = state.panel.settings.pages[page][name].params\n      }\n\n      return params\n    }\n\n    return initialParams\n  })\n}\n","import React, {\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Popup } from 'semantic-ui-react'\nimport { ConfigurationElements } from '../../shared/enums/ConfigurationElements'\nimport { useFieldValue } from '../../shared/hooks/useFieldValue'\nimport { usePageContext } from '../../shared/hooks/usePageContext'\nimport { IParams } from '../../shared/types/IParams'\nimport { IRootState } from '../../store/state'\nimport { panelActions } from '../Panel/actions'\n\ninterface IConnectedElementProps {\n  name: string\n  children: ReactNode\n  params: IParams\n  common?: boolean\n  optional?: boolean\n  color?: string | 'editable'\n  size?: string | 'editable'\n}\n\nexport const ConnectedElement = ({\n  name,\n  params,\n  children,\n  common,\n  optional,\n  color,\n  size,\n}: IConnectedElementProps): ReactElement => {\n  const dispatch = useDispatch()\n\n  if (typeof name !== 'string') {\n    dispatch(\n      panelActions.setRenderError({\n        error: 'Component error: Name is required field and must be a string.',\n      }),\n    )\n  }\n\n  const page = usePageContext()\n  const { focusedField, isInitialized } = useSelector(\n    (state: IRootState) => state.panel,\n  )\n  const isElementInitialized = Boolean(\n    useSelector((state: IRootState) => state.panel.settings.pages[page][name]),\n  )\n\n  if (optional) {\n    params['Is visible'] = {\n      type: ConfigurationElements.optional,\n    }\n  }\n\n  if (color === 'editable') {\n    params['Color'] = {\n      type: ConfigurationElements.color,\n    }\n  }\n\n  if (size === 'editable') {\n    params['Size'] = {\n      type: ConfigurationElements.size,\n    }\n  }\n\n  const elementParams = useFieldValue(name, params, common)\n\n  const initComponent = useCallback(() => {\n    dispatch(panelActions.initComponent({ page, name, params, common }))\n  }, [dispatch, name, page, params, common])\n\n  useEffect(() => {\n    if (!isElementInitialized || !isInitialized) {\n      initComponent()\n    }\n  }, [initComponent, isInitialized, isElementInitialized])\n\n  const [isOpen, setOpened] = useState(false)\n\n  const component = (\n    <Popup\n      className='popup-connected-element'\n      content={name}\n      trigger={\n        focusedField && focusedField === name ? (\n          <span className='currentElement'>{children}</span>\n        ) : (\n          children\n        )\n      }\n      onOpen={() => setOpened(true)}\n      onClose={() => setOpened(false)}\n      open={focusedField !== name && isOpen}\n    />\n  )\n\n  if (optional) {\n    return (elementParams['Is visible'].value && component) || null\n  }\n\n  return component\n}\n","import React, { ReactElement } from 'react'\nimport { Button } from 'semantic-ui-react'\nimport { colors } from '../../shared/constants/colors'\nimport { sizes } from '../../shared/constants/sizes'\nimport { ConfigurationElements } from '../../shared/enums/ConfigurationElements'\nimport { useFieldValue } from '../../shared/hooks/useFieldValue'\nimport { IBaseElementProps } from '../../shared/types/IBaseElementProps'\nimport { IOption } from '../../shared/types/IOption'\nimport { IParams } from '../../shared/types/IParams'\nimport { ConnectedElement } from './ConnectedElement'\n\ninterface IArrowButtonProps extends IBaseElementProps {\n  direction: 'left' | 'right'\n}\n\nexport const ArrowButton = ({\n  name,\n  direction = 'left',\n  common,\n  color,\n  size,\n  optional,\n  ...other\n}: IArrowButtonProps): ReactElement => {\n  if (direction !== 'left' && direction !== 'right') {\n    throw new Error('Invalid direction value')\n  }\n\n  const options: IOption[] = [\n    { text: 'Simple arrow', value: 'arrow', icon: 'arrow left' },\n    { text: 'Circle arrow', value: 'arrow circle', icon: 'arrow circle left' },\n    { text: 'Angle arrow', value: 'angle', icon: 'angle left' },\n  ]\n\n  const initialParams: IParams = {\n    Icon: {\n      type: ConfigurationElements.select,\n      options,\n    },\n  }\n\n  const params = useFieldValue(name, initialParams, common)\n\n  return (\n    <ConnectedElement\n      name={name}\n      optional={optional}\n      params={initialParams}\n      common={common}\n      color={color}\n      size={size}\n    >\n      <Button\n        color={\n          color === 'editable'\n            ? (params['Color'] || {}).value || colors[0].value\n            : color\n        }\n        size={\n          size === 'editable'\n            ? (params['Size'] || {}).value || sizes[0].value\n            : size\n        }\n        icon={`${String(\n          params['Icon'].value || options[0].value,\n        )} ${direction}`}\n        {...other}\n      />\n    </ConnectedElement>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { Segment, SegmentProps } from 'semantic-ui-react'\n\nexport const Content = ({ children, ...other }: SegmentProps): ReactElement => (\n\t<Segment attached {...other} className='app__page__body'>\n\t\t{children}\n\t</Segment>\n)\n","import React, { ReactElement } from 'react'\nimport { Segment, SegmentProps } from 'semantic-ui-react'\n\nexport const Footer = ({ children, ...other }: SegmentProps): ReactElement => (\n\t<Segment attached='bottom' {...other} className='app__page__footer'>\n\t\t{children}\n\t</Segment>\n)\n","import React, { ReactElement } from 'react'\nimport { Segment, SegmentProps } from 'semantic-ui-react'\n\nexport const Header = ({ children, ...other }: SegmentProps): ReactElement => (\n\t<Segment attached='top' {...other} className='app__page__header'>\n\t\t{children}\n\t</Segment>\n)\n","import React, { ReactElement } from 'react'\nimport { Progress } from 'semantic-ui-react'\nimport { colors } from '../../shared/constants/colors'\nimport { useFieldValue } from '../../shared/hooks/useFieldValue'\nimport { IBaseElementProps } from '../../shared/types/IBaseElementProps'\nimport { ConnectedElement } from './ConnectedElement'\nimport { sizes } from '../../shared/constants/sizes'\n\nexport const ProgressBar = ({\n  name,\n  common,\n  color,\n  size,\n  ...other\n}: IBaseElementProps): ReactElement => {\n  const params = useFieldValue(name, {}, common)\n\n  return (\n    <ConnectedElement\n      name={name}\n      optional={true}\n      params={{}}\n      common={common}\n      color={color}\n      size={size}\n    >\n      <Progress\n        percent={40}\n        color={\n          color === 'editable'\n            ? (params['Color'] || {}).value || colors[0].value\n            : color\n        }\n        size={\n          size === 'editable'\n            ? (params['Size'] || {}).value || sizes[0].value\n            : size\n        }\n        {...other}\n      />\n    </ConnectedElement>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { Button } from 'semantic-ui-react'\nimport { colors } from '../../shared/constants/colors'\nimport { sizes } from '../../shared/constants/sizes'\nimport { ConfigurationElements } from '../../shared/enums/ConfigurationElements'\nimport { useFieldValue } from '../../shared/hooks/useFieldValue'\nimport { IBaseElementProps } from '../../shared/types/IBaseElementProps'\nimport { IOption } from '../../shared/types/IOption'\nimport { ConnectedElement } from './ConnectedElement'\n\nexport const RetryButton = ({\n  name,\n  common,\n  optional,\n  color,\n  size,\n  ...other\n}: IBaseElementProps | any): ReactElement => {\n  const options: IOption[] = [\n    { text: 'Simple retry', value: 'undo', icon: 'undo' },\n    {\n      text: 'Alternate retry',\n      value: 'undo alternate',\n      icon: 'undo alternate',\n    },\n    { text: 'Circled retry', value: 'sync', icon: 'sync' },\n    {\n      text: 'Alternate circled retry',\n      value: 'sync alternate',\n      icon: 'sync alternate',\n    },\n  ]\n\n  const initialParams = {\n    Icon: {\n      type: ConfigurationElements.select,\n      options,\n    },\n  }\n\n  const params = useFieldValue(name, initialParams, common)\n\n  return (\n    <ConnectedElement\n      name={name}\n      optional={optional}\n      params={initialParams}\n      common={common}\n      color={color}\n      size={size}\n    >\n      <Button\n        icon={params['Icon'].value}\n        color={\n          color === 'editable'\n            ? (params['Color'] || {}).value || colors[0].value\n            : color\n        }\n        size={\n          size === 'editable'\n            ? (params['Size'] || {}).value || sizes[0].value\n            : size\n        }\n        {...other}\n      />\n    </ConnectedElement>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Image, Segment } from 'semantic-ui-react'\nimport { sizes } from '../../shared/constants/sizes'\nimport { ConfigurationElements } from '../../shared/enums/ConfigurationElements'\nimport { useFieldValue } from '../../shared/hooks/useFieldValue'\nimport { IBaseElementProps } from '../../shared/types/IBaseElementProps'\nimport { IOption } from '../../shared/types/IOption'\nimport { ConnectedElement } from './ConnectedElement'\n\ninterface ISelectableImageProps extends IBaseElementProps {\n  options: IOption[]\n}\n\nexport const SelectableImage = ({\n  name,\n  options,\n  common,\n  optional,\n  size,\n  ...other\n}: ISelectableImageProps) => {\n  const [loading, setLoading] = useState<boolean>(false)\n  const [src, setSrc] = useState<string>('')\n\n  const initialParams = {\n    Image: {\n      type: ConfigurationElements.select,\n      options: options.map(item => ({\n        ...item,\n        image: { src: item.value },\n      })),\n    },\n  }\n\n  const params = useFieldValue(name, initialParams, common)\n\n  const newSrc = params['Image'].value\n\n  useEffect(() => {\n    if (newSrc !== src) {\n      setLoading(true)\n      setSrc(newSrc)\n    }\n  }, [newSrc, src])\n\n  return (\n    <ConnectedElement\n      name={name}\n      optional={optional}\n      params={initialParams}\n      common={common}\n      size={size}\n    >\n      <Segment\n        className='selectable-image-container'\n        loading={loading}\n        basic={true}\n        compact={true}\n      >\n        {src && (\n          <Image\n            src={src}\n            {...other}\n            size={\n              size === 'editable'\n                ? (params['Size'] || {}).value || sizes[0].value\n                : size\n            }\n            onLoad={() => setLoading(false)}\n            onError={() => setLoading(false)}\n            style={{ opacity: loading ? '0' : '1' }}\n          />\n        )}\n      </Segment>\n    </ConnectedElement>\n  )\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { memo } from 'react'\nimport JsxParser from 'react-jsx-parser'\nimport { useDispatch } from 'react-redux'\nimport * as semantic from 'semantic-ui-react'\nimport { App } from '../interfaceElements/App'\nimport { ArrowButton } from '../interfaceElements/ArrowButton'\nimport { Content } from '../interfaceElements/Content'\nimport { Footer } from '../interfaceElements/Footer'\nimport { Header } from '../interfaceElements/Header'\nimport { Page } from '../interfaceElements/Page'\nimport { ProgressBar } from '../interfaceElements/ProgressBar'\nimport { RetryButton } from '../interfaceElements/RetryButton'\nimport { SelectableImage } from '../interfaceElements/SelectableImage'\nimport { panelActions } from '../Panel/actions'\n\nconst UnmemorizedCodeRender = ({ code }) => {\n  const dispatch = useDispatch()\n  const setError = error => {\n    dispatch(panelActions.clear())\n    dispatch(panelActions.setRenderError({ error }))\n  }\n\n  return (\n    <JsxParser\n      renderError={error => {\n        setError(error.error)\n        return null\n      }}\n      components={{\n        ...semantic,\n        App,\n        Page,\n        ArrowButton,\n        ProgressBar,\n        Header,\n        Footer,\n        Content,\n        RetryButton,\n        SelectableImage,\n      }}\n      allowUnknownElements={false}\n      jsx={code}\n    />\n  )\n}\nexport const CodeRender = memo(UnmemorizedCodeRender)\n","import React, { ReactElement } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { Checkbox, Dropdown, Form } from 'semantic-ui-react'\nimport { colors } from '../../shared/constants/colors'\nimport { sizes } from '../../shared/constants/sizes'\nimport { ConfigurationElements } from '../../shared/enums/ConfigurationElements'\nimport { IRootState } from '../../store/state'\nimport { panelActions } from '../Panel/actions'\n\ninterface IConfigurationElementProps {\n  name: string\n  page: string\n  type: ConfigurationElements\n  param: string\n  common?: boolean\n}\n\nexport const ConfigurationElement = ({\n  name,\n  page,\n  param,\n  type,\n  common,\n}: IConfigurationElementProps): ReactElement | null => {\n  let component = null\n\n  const { application_id, user_id } = useParams<{\n    application_id: string\n    user_id: string\n  }>()\n\n  const dispatch = useDispatch()\n  const { value } = useSelector((state: IRootState) =>\n    (common\n      ? state.panel.settings.common[name].params[param]\n      : state.panel.settings.pages[page][name].params[param]),\n  )\n\n  const { options } = useSelector(\n    (state: IRootState) =>\n      state.panel.settings.pages[page][name].params[param],\n  )\n  const { online } = useSelector((state: IRootState) => state.panel)\n\n  const handleChange = (evt: any, data: any): void => {\n    const action = {\n      value: data.value || data.checked,\n      name,\n      page,\n      param,\n      common,\n    }\n    dispatch(panelActions.setFieldValue(action))\n    if (online) {\n      dispatch(\n        panelActions.updateData({\n          ...action,\n          application_id,\n          user_id,\n          common,\n        }),\n      )\n    }\n  }\n\n  const handleFocus = (): void => {\n    dispatch(panelActions.setFocusedField({ name }))\n  }\n\n  const handleBlur = (): void => {\n    dispatch(panelActions.setFocusedField({ name: undefined }))\n  }\n\n  switch (type) {\n    case ConfigurationElements.size:\n      component = (\n        <Dropdown\n          onChange={handleChange}\n          selection={true}\n          options={sizes}\n          name={param}\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n        />\n      )\n      break\n\n    case ConfigurationElements.color:\n      component = (\n        <Dropdown\n          onChange={handleChange}\n          selection={true}\n          options={colors}\n          name={param}\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n        />\n      )\n      break\n\n    case ConfigurationElements.select:\n      component = (\n        <Dropdown\n          onChange={handleChange}\n          selection={true}\n          options={options}\n          name={param}\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n        />\n      )\n      break\n\n    case ConfigurationElements.optional:\n      component = (\n        <Checkbox\n          onChange={handleChange}\n          checked={value}\n          toggle={true}\n          name={param}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n        />\n      )\n      break\n\n    default:\n      return null\n  }\n\n  return (\n    <Form.Field>\n      <label>{param}</label>\n      {component}\n    </Form.Field>\n  )\n}\n","/* eslint-disable react/display-name */\nimport React, { ReactElement } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Form,\n  Item,\n  Label,\n  Popup,\n  Segment,\n  Tab,\n  Divider,\n} from 'semantic-ui-react'\nimport { IRootState } from '../../../store/state'\nimport { panelActions } from '../../Panel/actions'\nimport { ConfigurationElement } from '../ConfigurationElement'\nimport './index.css'\n\nexport const ConfigurationBlock = (): ReactElement | null => {\n  const { settings, isInitialized } = useSelector(\n    (state: IRootState) => state.panel,\n  )\n  const { currentPage } = useSelector((state: IRootState) => state.panel)\n\n  const dispatch = useDispatch()\n  const handleTabChange = (evt: any, data: any): void => {\n    dispatch(\n      panelActions.setCurrentPage({\n        name: data.panes[data.activeIndex].menuItem,\n      }),\n    )\n  }\n\n  const panes = Object.keys(settings.pages).map((pageKey) => ({\n    menuItem: pageKey,\n    pane: (\n      <Tab.Pane\n        className='configuration-block__tab'\n        active={pageKey === currentPage}\n        key={pageKey}\n        as={Segment.Group}\n      >\n        <Segment>\n          {Object.keys(settings.pages[pageKey]).map(\n            (elementKey, elementIndex) => (\n              <React.Fragment key={elementKey}>\n                <h4>\n                  {elementKey}{' '}\n                  {settings.pages[pageKey][elementKey].common && (\n                    <Popup\n                      content='This interface element is shared across multiple pages'\n                      trigger={\n                        <Label style={{ marginLeft: '5px', cursor: 'pointer' }}>\n                          Common\n                        </Label>\n                      }\n                    />\n                  )}\n                </h4>\n\n                <Item.Group>\n                  {Object.keys(settings.pages[pageKey][elementKey].params).map(\n                    (paramKey, paramIndex) => (\n                      <Item key={paramIndex}>\n                        <ConfigurationElement\n                          name={elementKey}\n                          param={paramKey}\n                          page={pageKey}\n                          type={\n                            settings.pages[pageKey][elementKey].params[paramKey]\n                              .type\n                          }\n                          common={settings.pages[pageKey][elementKey].common}\n                        />\n                      </Item>\n                    ),\n                  )}\n                </Item.Group>\n                {elementIndex !==\n                  Object.keys(settings.pages[pageKey]).length - 1 && (\n                  <Divider fitted={true} />\n                )}\n              </React.Fragment>\n            ),\n          )}\n        </Segment>\n      </Tab.Pane>\n    ),\n  }))\n\n  if (isInitialized) {\n    return (\n      <Form className='configuration-block'>\n        <Tab\n          renderActiveOnly={false}\n          onTabChange={handleTabChange}\n          menu={{ fluid: true, vertical: true }}\n          menuPosition='left'\n          panes={panes}\n          grid={{ paneWidth: 10, tabWidth: 6 }}\n        />\n      </Form>\n    )\n  }\n\n  return null\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { ReactElement, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport {\n  Breadcrumb,\n  Container,\n  Message,\n  Segment,\n  Popup,\n  Icon,\n} from 'semantic-ui-react'\nimport { ErrorMessage } from '../../shared/components/ErrorMessage'\nimport { Loader } from '../../shared/components/Loader'\nimport { IRootState } from '../../store/state'\nimport { CodeRender } from '../CodeRender'\nimport { ConfigurationBlock } from '../configurationElements/ConfigurationBlock'\nimport { panelActions } from './actions'\nimport './index.css'\n\ninterface IPanelProps {\n  online?: boolean\n}\n\nexport const Panel = ({ online }: IPanelProps): ReactElement => {\n  const {\n    descriptionCode,\n    isInitialized,\n    renderError,\n    isPending,\n    error,\n    name,\n  } = useSelector((state: IRootState) => state.panel)\n\n  const { application_id, user_id } = useParams<{\n    application_id: string\n    user_id: string\n  }>()\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (online) {\n      dispatch(panelActions.loadData({ application_id, user_id }))\n    }\n  }, [online, dispatch, application_id, user_id])\n\n  if (renderError) {\n    return (\n      <Container>\n        <Segment padded={true} basic={true}>\n          <Message\n            icon='warning circle'\n            size='big'\n            negative={true}\n            content={renderError}\n          />\n        </Segment>\n      </Container>\n    )\n  }\n\n  if (isPending) {\n    return <Loader text='Loading CP...' />\n  }\n\n  if (error !== '') {\n    return (\n      <Container id='Panel'>\n        <ErrorMessage error={error} />\n      </Container>\n    )\n  }\n\n  return (\n    <Container id='Panel'>\n      {isInitialized && (\n        <>\n          <div className='panel-header'>\n            <Breadcrumb size='massive'>\n              {user_id && (\n                <>\n                  <Breadcrumb.Section>\n                    <Link to={`/panels/${user_id}`}>Configuration Panels</Link>\n                  </Breadcrumb.Section>\n                  <Breadcrumb.Divider icon='right chevron' />\n                </>\n              )}\n              <Breadcrumb.Section active>\n                {name ? (\n                  <>\n                    Configure {name}{' '}\n                    <Popup\n                      content='All changes will be saved automatically'\n                      trigger={<Icon color='blue' size='small' name='save' />}\n                    />\n                  </>\n                ) : (\n                  'Configuration panel'\n                )}\n              </Breadcrumb.Section>\n            </Breadcrumb>\n          </div>\n\n          <ConfigurationBlock />\n          <CodeRender code={descriptionCode} />\n        </>\n      )}\n    </Container>\n  )\n}\n","export const CODE_EDITOR_CHANGE_CODE = 'CODE_EDITOR_CHANGE_CODE'\nexport const CODE_EDITOR_CHANGE_HEIGHT = 'CODE_EDITOR_CHANGE_HEIGHT'\n\nexport const CODE_EDITOR_LOAD_DATA = 'CODE_EDITOR_LOAD_DATA'\nexport const CODE_EDITOR_DATA_LOADED = 'CODE_EDITOR_DATA_LOADED'\nexport const CODE_EDITOR_FAILURE = 'CODE_EDITOR_FAILURE'\n\nexport const CODE_EDITOR_SET_PENDING = 'CODE_EDITOR_SET_PENDING'\n\nexport const CODE_EDITOR_CLEAR = 'CODE_EDITOR_CLEAR'\n\nexport const codeEditorActions = {\n  changeCode: (payload: { code: string }) => ({\n    type: CODE_EDITOR_CHANGE_CODE,\n    payload,\n  }),\n\n  changeHeight: (payload: { height: string | number }) => ({\n    type: CODE_EDITOR_CHANGE_HEIGHT,\n    payload,\n  }),\n\n  loadData: (payload: { _id: string }) => ({\n    type: CODE_EDITOR_LOAD_DATA,\n    payload,\n  }),\n\n  dataLoaded: (payload: { descriptionCode: string; name: string }) => ({\n    type: CODE_EDITOR_DATA_LOADED,\n    payload,\n  }),\n\n  setPending: (payload: { flag: boolean }) => ({\n    type: CODE_EDITOR_SET_PENDING,\n    payload,\n  }),\n\n  failure: (payload: { error: string }) => ({\n    type: CODE_EDITOR_FAILURE,\n    payload,\n  }),\n\n  clear: () => ({\n    type: CODE_EDITOR_CLEAR,\n  }),\n}\n","export const HOW_TO_OPEN = 'HOW_TO_OPEN'\nexport const HOW_TO_CLOSE = 'HOW_TO_CLOSE_MODAL'\n\nexport const howToActions = {\n  open: () => ({\n    type: HOW_TO_OPEN,\n  }),\n\n  close: () => ({\n    type: HOW_TO_CLOSE,\n  }),\n}\n","import 'codemirror/addon/lint/lint.css'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material-darker.css'\nimport { Resizable } from 're-resizable'\nimport React, { ReactElement, useEffect } from 'react'\nimport { Controlled as CodeMirror } from 'react-codemirror2'\nimport { useDispatch, useSelector } from 'react-redux'\nimport 'react-resizable/css/styles.css'\nimport { Link } from 'react-router-dom'\nimport { Action } from 'redux'\nimport { Button, Icon, Message, Segment } from 'semantic-ui-react'\nimport { Loader } from '../../shared/components/Loader'\nimport { EditorModes } from '../../shared/enums/EditorModes'\nimport { formatCode } from '../../shared/functions/formatCode'\nimport { useEditorModes } from '../../shared/hooks/useEditorModes'\nimport { IRootState } from '../../store/state'\nimport { editorModalActions } from '../EditorModal/actions'\nimport { Panel } from '../Panel'\nimport { panelActions } from '../Panel/actions'\nimport { codeEditorActions } from './actions'\nimport './index.css'\nimport { howToActions } from '../HowTo/actions'\n\nrequire('codemirror/mode/jsx/jsx')\nrequire('codemirror/addon/lint/lint')\n\nconst minHeight = 45\nconst options = {\n  mode: 'jsx',\n  theme: 'material-darker',\n  styleActiveLine: true,\n  lineNumbers: true,\n  smartIndent: true,\n  line: true,\n}\n\nexport const CodeEditor = (): ReactElement => {\n  const { _id, mode } = useEditorModes()\n\n  const { code, height, isPending, name, error } = useSelector(\n    (state: IRootState) => state.codeEditor,\n  )\n  const renderError = Boolean(\n    useSelector((state: IRootState) => state.panel.renderError),\n  )\n  const { descriptionCode, isPending: isGenerating } = useSelector(\n    (state: IRootState) => state.panel,\n  )\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (mode === EditorModes.edit) {\n      dispatch(codeEditorActions.loadData({ _id: _id as string }))\n    }\n  }, [_id, mode, dispatch])\n\n  const handleOpenModal = (): Action =>\n    dispatch(editorModalActions.openModal(name))\n\n  const handleMinimizeWindow = (): Action =>\n    dispatch(codeEditorActions.changeHeight({ height: minHeight }))\n\n  const handleExpandWindow = (): Action =>\n    dispatch(codeEditorActions.changeHeight({ height: '100vh' }))\n\n  const handleCodeChange = (editor: any, data: any, value: string): any => {\n    dispatch(\n      codeEditorActions.changeCode({\n        code: value,\n      }),\n    )\n  }\n\n  const handleCodeFormat = (): void => {\n    dispatch(\n      codeEditorActions.changeCode({\n        code: formatCode(code),\n      }),\n    )\n  }\n\n  const handleOpenHowTo = (): void => {\n    dispatch(howToActions.open())\n  }\n\n  if (isPending) {\n    return <Loader text='Loading Editor...' />\n  }\n\n  if (error !== '') {\n    return (\n      <Segment padded={true} basic={true}>\n        <Message size='big' negative={true}>\n          <Message.Header>{error}</Message.Header>\n        </Message>\n      </Segment>\n    )\n  }\n\n  return (\n    <div className='code-editor-container'>\n      <Segment basic={true} className='code-editor-container__code-render'>\n        {(!isGenerating && <Panel />) || <Loader text='Generating CP...' />}\n      </Segment>\n      <Resizable\n        className='code-editor-container__code-editor'\n        size={{ width: '100%', height }}\n        onResizeStop={(e, direction, ref, d) =>\n          dispatch(\n            codeEditorActions.changeHeight({\n              height: Number(height) + d.height,\n            }),\n          )\n        }\n        minHeight={minHeight}\n        minWidth='100%'\n        maxHeight={'100vh'}\n      >\n        <span className='code-editor__tittle'>\n          <p className='logo'>\n            <Icon name='setting' />\n            Panel\n          </p>\n          <p>IDE</p>\n          <b>{name}</b>\n        </span>\n\n        <CodeMirror\n          value={code}\n          options={options}\n          onBeforeChange={handleCodeChange}\n        />\n\n        <Button.Group className='code-editor__window-buttons'>\n          <Button icon='question' onClick={handleOpenHowTo} />\n          <Button icon='window maximize outline' onClick={handleExpandWindow} />\n          <Button\n            icon='window minimize outline'\n            onClick={handleMinimizeWindow}\n          />\n        </Button.Group>\n\n        <Button.Group className='code-editor__control-buttons'>\n          <Link to='/editors'>\n            <Button\n              icon='chevron left'\n              content='Back to editors'\n              onClick={() => {\n                dispatch(panelActions.clear())\n                dispatch(codeEditorActions.clear())\n              }}\n            />\n          </Link>\n          <Button\n            icon='play'\n            loading={isGenerating}\n            onClick={() => {\n              dispatch(panelActions.clear())\n              dispatch(codeEditorActions.changeCode({ code: formatCode(code) }))\n              dispatch(panelActions.init({ descriptionCode: formatCode(code) }))\n            }}\n            disabled={!code || code === descriptionCode || isGenerating}\n          />\n          <Button\n            icon={mode === EditorModes.create ? 'add' : 'save'}\n            disabled={\n              !descriptionCode ||\n              renderError ||\n              code !== descriptionCode ||\n              isGenerating\n            }\n            onClick={handleOpenModal}\n          />\n          <Button\n            icon='code'\n            content='Format code'\n            onClick={handleCodeFormat}\n            disabled={isGenerating}\n          />\n        </Button.Group>\n      </Resizable>\n    </div>\n  )\n}\n","export enum RequestsEnum {\n  add,\n  update,\n  delete,\n  getItem,\n  getItems,\n}\n","import React, { ReactElement } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { Button, Form, Message, Modal } from 'semantic-ui-react'\nimport { EditorModes } from '../../shared/enums/EditorModes'\nimport { useEditorModes } from '../../shared/hooks/useEditorModes'\nimport { IRootState } from '../../store/state'\nimport { editorModalActions } from './actions'\nimport { formatCode } from '../../shared/functions/formatCode'\n\nexport const EditorModal = (): ReactElement => {\n  const { _id, mode } = useEditorModes()\n\n  const { isOpened, isPending, error, name } = useSelector(\n    (state: IRootState) => state.editorModal,\n  )\n  const { descriptionCode, settings } = useSelector(\n    (state: IRootState) => state.panel,\n  )\n\n  const dispatch = useDispatch()\n\n  const handleClose = (): Action => dispatch(editorModalActions.closeModal())\n\n  const handleChange = (evt: any, data: any): Action =>\n    dispatch(editorModalActions.changeName({ name: data.value }))\n\n  const handleSubmit = (): void => {\n    if (mode === EditorModes.create) {\n      dispatch(\n        editorModalActions.add({\n          name,\n          descriptionCode: formatCode(descriptionCode),\n          defaultSettings: settings,\n        }),\n      )\n    } else {\n      dispatch(\n        editorModalActions.update({\n          _id,\n          name,\n          descriptionCode,\n          defaultSettings: settings,\n        }),\n      )\n    }\n  }\n\n  return (\n    <Modal size='tiny' open={isOpened} closeIcon onClose={handleClose}>\n      <Modal.Header>\n        {mode === EditorModes.create\n          ? 'Create a new one CP'\n          : 'Update created CP'}\n      </Modal.Header>\n      <Modal.Content>\n        <Form\n          error={Boolean(error.msg)}\n          loading={isPending}\n          onSubmit={handleSubmit}\n        >\n          <Form.Input\n            name='name'\n            label='Name'\n            value={name}\n            required={true}\n            fluid={true}\n            onChange={handleChange}\n          />\n          <Message error={true} header='Action Forbidden' content={error.msg} />\n          <Button type='submit' primary={true}>\n            {mode === EditorModes.create ? 'Create' : 'Update'}\n          </Button>\n          <Button onClick={handleClose}>Cancel</Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport {\n  Accordion,\n  AccordionTitleProps,\n  Button,\n  Dropdown,\n  Icon,\n  Image,\n  Message,\n  Modal,\n  Progress,\n  Table,\n} from 'semantic-ui-react'\nimport { colors } from '../../shared/constants/colors'\nimport { sizes } from '../../shared/constants/sizes'\nimport { IRootState } from '../../store/state'\nimport { howToActions } from './actions'\nimport './index.css'\n\ninterface ICodeSampleProps {\n  code: string\n}\nconst CodeSample = ({ code }: ICodeSampleProps) => (\n  <SyntaxHighlighter showLineNumbers={true} language='jsx'>\n    {code}\n  </SyntaxHighlighter>\n)\n\nexport const HowTo = () => {\n  const { isOpened } = useSelector((state: IRootState) => state.howTo)\n  const dispatch = useDispatch()\n\n  const handleClose = () => dispatch(howToActions.close())\n\n  const [activeIndex, setActiveIndex] = useState(-1)\n\n  const handleItemClick = (e: any, titleProps: AccordionTitleProps) => {\n    const { index } = titleProps\n    const newIndex = activeIndex === index ? -1 : index\n\n    setActiveIndex(newIndex as number)\n  }\n\n  return (\n    <Modal\n      className='HowTo'\n      size='fullscreen'\n      open={isOpened}\n      closeIcon={true}\n      onClose={handleClose}\n    >\n      <Modal.Header as='h1'>\n        <Icon name='question circle outline' />\n        Documentation\n      </Modal.Header>\n      <Modal.Content as='Container'>\n        <h2>How to use the configuration panel (CP) editor?</h2>\n        <h3>If you're going to create a new one CP:</h3>\n        <ul>\n          <li>\n            Write description of mobile application interface using{' '}\n            <a href='#language'>special language</a>;\n          </li>\n          <li>\n            Press <Button size='mini' icon='play' /> to generate CP. After\n            generation you can try out generated CP;\n          </li>\n          <li>\n            If CP satisfiable, you can add it to the system. Press{' '}\n            <Button size='mini' icon='add' /> to open modal form;\n          </li>\n          <li>At modal form type name of CP. Name must be unique;</li>\n          <li>\n            Press{' '}\n            <Button primary={true} size='mini'>\n              Create\n            </Button>\n          </li>\n          <li>\n            After after CP added you will be redirected to editor of created CP.\n          </li>\n        </ul>\n\n        <h3>If you're editing created before CP:</h3>\n        <ul>\n          <li>\n            Edit description of mobile application interface using{' '}\n            <a href='#language'>special language</a>;\n          </li>\n          <li>\n            Press <Button size='mini' icon='play' /> to generate CP. After\n            generation you can try out generated CP;\n          </li>\n          <li>\n            If CP satisfiable, you can save changes. Press{' '}\n            <Button size='mini' icon='add' /> to open modal form;\n          </li>\n          <li>\n            At modal form type new name of CP (if you want to change the name).\n            Name must be unique;\n            <br />\n            After saving changes all users settings of changed CP of mobile\n            application will be reset to defaults!\n          </li>\n          <li>\n            Press{' '}\n            <Button primary={true} size='mini'>\n              Update\n            </Button>\n          </li>\n        </ul>\n\n        <h2 id='language'>Mobile application interface description language</h2>\n        <h3>This language based on JSX and UI library Semantic UI.</h3>\n\n        <p>\n          It's created to help writing description of interface of mobile\n          application and than generate CP by description. All you need just\n          follow the rules and then just press button{' '}\n          <Button size='tiny' icon='play' />\n          <br />\n          You can use all components of Semantic UI library in your mobile\n          interface description or any other html tags. Semantic UI\n          documentation right in this window{' '}\n          <a href='#documentation'>\n            below <Icon name='arrow down' />\n          </a>\n          .\n        </p>\n\n        <h3>Language contains of special elements:</h3>\n        <ul>\n          <li>\n            Structure elements:\n            <ul>\n              <li>\n                <a href='#App'>App</a>\n              </li>\n              <li>\n                <a href='#Page'>Page</a>\n              </li>\n            </ul>\n          </li>\n          <li>\n            Configurable interface elements:\n            <ul>\n              <li>\n                <a href='#ProgressBar'>ProgressBar</a>\n              </li>\n              <li>\n                <a href='#SelectableImage'>SelectableImage</a>\n              </li>\n              <li>\n                <a href='#ArrowButton'>ArrowButton</a>\n              </li>\n              <li>\n                <a href='#RetryButton'>RetryButton</a>\n              </li>\n            </ul>\n          </li>\n          <li>Other components of Semantic UI library.</li>\n        </ul>\n\n        <h3>There are some main rules of description writing:</h3>\n        <ul>\n          <li>\n            App component must be presented in description and must be root\n            parent element;\n          </li>\n          <li>App must include only Page elements;</li>\n          <li>\n            There must be at least one Page element with children components;\n          </li>\n        </ul>\n\n        <h3>Sample of base description structure:</h3>\n        <CodeSample\n          code={'<App><Page name=\\'Sample page\\'>/* Some interface elements here... */</Page></App>'}\n        />\n\n        <h3>Configurable interface elements props:</h3>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Prop name</Table.HeaderCell>\n              <Table.HeaderCell width='4'>Type</Table.HeaderCell>\n              <Table.HeaderCell>Required</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>name</Table.Cell>\n              <Table.Cell>string</Table.Cell>\n              <Table.Cell>true</Table.Cell>\n              <Table.Cell>Name of the element.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>size</Table.Cell>\n              <Table.Cell>\n                One of sizes:{' '}\n                <Dropdown\n                  defaultValue={sizes[0].value}\n                  selection\n                  compact\n                  options={sizes}\n                />{' '}\n                or <a href='#editable'>'editable'</a>\n              </Table.Cell>\n              <Table.Cell>false</Table.Cell>\n              <Table.Cell>Sie of the element.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>color</Table.Cell>\n              <Table.Cell>\n                One of colors:{' '}\n                <Dropdown\n                  defaultValue={colors[0].value}\n                  selection\n                  compact\n                  options={colors}\n                />{' '}\n                or <a href='#editable'>'editable'</a>\n              </Table.Cell>\n              <Table.Cell>false</Table.Cell>\n              <Table.Cell>Color of the element.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>common</Table.Cell>\n              <Table.Cell>boolean</Table.Cell>\n              <Table.Cell>false</Table.Cell>\n              <Table.Cell>\n                If you have elements which shared across pages you can set\n                'common' to add ability to change settings of the element across\n                pages. If you change settings of common element at one of the\n                pages it will be automatically changed across pages.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>optional</Table.Cell>\n              <Table.Cell>boolean</Table.Cell>\n              <Table.Cell>false</Table.Cell>\n              <Table.Cell>\n                Makes element optional and add ability to hide it.\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Message id='editable' info={true}>\n          <p>\n            By setting 'editable' for one of the props you can add more\n            configurable options for interface element.\n          </p>\n        </Message>\n\n        <h3>More about components:</h3>\n        <Accordion fluid styled>\n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={handleItemClick}\n            id='App'\n          >\n            <h3>\n              <Icon name='dropdown' />\n              App\n            </h3>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            <p>\n              App tag is a main root element. Description must include App tag.\n            </p>\n            <h3>Code sample:</h3>\n            <CodeSample code='<App></App>' />\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={handleItemClick}\n            id='Page'\n          >\n            <h3>\n              <Icon name='dropdown' />\n              Page\n            </h3>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            <p>Page tag helps to separate mobile interface app on pages.</p>\n            <h3>Props:</h3>\n            <Table celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Prop name</Table.HeaderCell>\n                  <Table.HeaderCell>Type</Table.HeaderCell>\n                  <Table.HeaderCell>Required</Table.HeaderCell>\n                  <Table.HeaderCell>Description</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>name</Table.Cell>\n                  <Table.Cell>string</Table.Cell>\n                  <Table.Cell>true</Table.Cell>\n                  <Table.Cell>Name of the page.</Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n            <h3>Code sample:</h3>\n            <CodeSample code=\"<Page name='Sample page'></Page>\" />\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 2}\n            index={2}\n            onClick={handleItemClick}\n            id='ProgressBar'\n          >\n            <h3>\n              <Icon name='dropdown' />\n              ProgressBar\n            </h3>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 2}>\n            <p>\n              ProgressBar is an interface element. Extends{' '}\n              <a href='https://react.semantic-ui.com/modules/progress/'>\n                Semantic UI progress\n              </a>{' '}\n              and all its props.\n            </p>\n\n            <h3>How it looks like:</h3>\n            <Progress percent={11} />\n            <h3>Code sample:</h3>\n            <CodeSample code=\"<ProgressBar name='Progress'/>\" />\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 3}\n            index={3}\n            onClick={handleItemClick}\n            id='SelectableImage'\n          >\n            <h3>\n              <Icon name='dropdown' />\n              SelectableImage\n            </h3>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 3}>\n            <p>\n              SelectableImage is an interface element. Extends{' '}\n              <a href='https://react.semantic-ui.com/modules/image/'>\n                Semantic UI image\n              </a>{' '}\n              and all its props.\n            </p>\n            <h3>Props:</h3>\n            <Table celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Prop name</Table.HeaderCell>\n                  <Table.HeaderCell>Type</Table.HeaderCell>\n                  <Table.HeaderCell>Required</Table.HeaderCell>\n                  <Table.HeaderCell>Description</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>options</Table.Cell>\n                  <Table.Cell>\n                    {\"{text: 'Text of option', value: 'URL to image'}[]\"}\n                  </Table.Cell>\n                  <Table.Cell>true</Table.Cell>\n                  <Table.Cell>Selectable options of element.</Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n            <h3>How it looks like:</h3>\n            <Image\n              src='https://react.semantic-ui.com/images/wireframe/image.png'\n              size='small'\n            />\n            <h3>Code sample:</h3>\n            <CodeSample\n              code={`<SelectableImage \n  name='Image' \n  options={[ /* Array of options */]} \n/>`}\n            />\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 4}\n            index={4}\n            onClick={handleItemClick}\n            id='ArrowButton'\n          >\n            <h3>\n              <Icon name='dropdown' />\n              ArrowButton\n            </h3>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 4}>\n            <p>\n              ArrowButton is an interface element. Extends{' '}\n              <a href='https://react.semantic-ui.com/modules/button/'>\n                Semantic UI button\n              </a>{' '}\n              and all its props.\n            </p>\n            <h3>Props:</h3>\n            <Table celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Prop name</Table.HeaderCell>\n                  <Table.HeaderCell>Type</Table.HeaderCell>\n                  <Table.HeaderCell>Required</Table.HeaderCell>\n                  <Table.HeaderCell>Description</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>direction</Table.Cell>\n                  <Table.Cell>'left' or 'right'</Table.Cell>\n                  <Table.Cell>false</Table.Cell>\n                  <Table.Cell>\n                    Direction of arrow button. Default value: 'left'.\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n            <h3>How it looks like:</h3>\n            <Button icon='arrow left' />\n            <h3>Code sample:</h3>\n            <CodeSample code=\"<ArrowButton direction='left' name='Prev'/>\" />\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 5}\n            index={5}\n            onClick={handleItemClick}\n            id='RetryButton'\n          >\n            <h3>\n              <Icon name='dropdown' />\n              RetryButton\n            </h3>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 5}>\n            <p>\n              RetryButton is an interface element. Extends{' '}\n              <a href='https://react.semantic-ui.com/modules/button/'>\n                Semantic UI button\n              </a>{' '}\n              and all its props.\n            </p>\n            <h3>How it looks like:</h3>\n            <Button icon='redo' />\n            <h3>Code sample:</h3>\n            <CodeSample code=\"<RetryButton name='Retry'/>\" />\n          </Accordion.Content>\n        </Accordion>\n        <br />\n        <iframe\n          id='documentation'\n          width='100%'\n          height='500px'\n          src='https://react.semantic-ui.com/'\n        />\n      </Modal.Content>\n    </Modal>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { CodeEditor } from '../CodeEditor'\nimport { EditorModal } from '../EditorModal'\nimport { HowTo } from '../HowTo'\n\nexport const Editor = (): ReactElement => (\n  <>\n    <CodeEditor />\n    <EditorModal />\n    <HowTo />\n  </>\n)\n","import { IPaginationState } from './state'\n\nexport const PAGINATION_INIT = 'PAGINATION_INIT'\nexport const PAGINATION_SET_CURRENT_PAGE = 'PAGINATION_SET_CURRENT_PAGE'\n\nexport const paginationActions = {\n  init: (payload: Partial<IPaginationState>) => ({\n    type: PAGINATION_INIT,\n    payload,\n  }),\n\n  setCurrentPage: (payload: { currentPage: number }) => ({\n    type: PAGINATION_SET_CURRENT_PAGE,\n    payload,\n  }),\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Pagination as BasicPagination } from 'semantic-ui-react'\nimport { IRootState } from '../../store/state'\nimport { paginationActions } from './actions'\n\ninterface IPaginationProps {\n  onLoad: (...args: any) => void\n}\n\nexport const Pagination = ({ onLoad }: IPaginationProps) => {\n  const { totalPages, currentPage } = useSelector(\n    (state: IRootState) => state.pagination,\n  )\n\n  const dispatch = useDispatch()\n\n  if (totalPages > 1) {\n    return (\n      <BasicPagination\n        onPageChange={(evt, data) => {\n          onLoad({ currentPage: data.activePage })\n          dispatch(\n            paginationActions.setCurrentPage({\n              currentPage: data.activePage as number,\n            }),\n          )\n        }}\n        activePage={currentPage}\n        totalPages={totalPages}\n      />\n    )\n  }\n\n  return null\n}\n","import { IApplicationDTO } from '../../shared/types/IApplicationDTO'\n\nexport const EDITORS_LOAD_DATA = 'EDITORS_LOAD_DATA'\nexport const EDITORS_DATA_LOADED = 'EDITORS_DATA_LOADED'\nexport const EDITORS_FAILURE = 'EDITORS_FAILURE'\nexport const EDITORS_DELETE = 'EDITORS_DELETE'\nexport const EDITORS_SET_PENDING = 'EDITORS_SET_PENDING'\n\nexport const editorsActions = {\n  loadData: (payload?: { currentPage: number }) => ({\n    type: EDITORS_LOAD_DATA,\n    payload,\n  }),\n\n  dataLoaded: (payload: { list: IApplicationDTO[] }) => ({\n    type: EDITORS_DATA_LOADED,\n    payload,\n  }),\n\n  failure: (payload: { error: string }) => ({\n    type: EDITORS_FAILURE,\n    payload,\n  }),\n\n  delete: (payload: { _id: string }) => ({\n    type: EDITORS_DELETE,\n    payload,\n  }),\n\n  setPending: (payload: { flag: boolean }) => ({\n    type: EDITORS_SET_PENDING,\n    payload,\n  }),\n}\n","import React, { ReactElement, ReactNode, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Container, List, Message, Segment } from 'semantic-ui-react'\nimport { ErrorMessage } from '../../shared/components/ErrorMessage'\nimport { Loader } from '../../shared/components/Loader'\nimport { IApplicationDTO } from '../../shared/types/IApplicationDTO'\nimport { IRootState } from '../../store/state'\nimport { codeEditorActions } from '../CodeEditor/actions'\nimport { Pagination } from '../Pagination'\nimport { panelActions } from '../Panel/actions'\nimport { editorsActions } from './actions'\nimport './index.css'\n\nexport const Editors = (): ReactElement => {\n  const { list, isPending, error } = useSelector(\n    (state: IRootState) => state.editors,\n  )\n\n  const dispatch = useDispatch()\n\n  const handleLoad = useCallback(\n    (params?: { currentPage: number }) =>\n      dispatch(editorsActions.loadData(params)),\n    [dispatch],\n  )\n\n  const handleDelete = (_id: string): void => {\n    // eslint-disable-next-line no-alert\n    const confirmed = window.confirm('Please, confirm deletion')\n\n    if (confirmed) {\n      dispatch(editorsActions.delete({ _id }))\n    }\n  }\n\n  useEffect(() => {\n    handleLoad()\n  }, [dispatch, handleLoad])\n\n  const renderList = (): ReactNode => {\n    if (list.length) {\n      return (\n        <Segment className='list-container'>\n          <List\n            divided={true}\n            verticalAlign='middle'\n            size='big'\n            animated={true}\n            selection={true}\n          >\n            {list.map((item: IApplicationDTO) => (\n              <List.Item key={item._id}>\n                <Link to={`/editor/${item._id}`}>\n                  <List.Header>{item.name}</List.Header>\n                </Link>\n                <List.Content>\n                  <Button\n                    icon='delete'\n                    onClick={() => handleDelete(item._id as string)}\n                  />\n                </List.Content>\n              </List.Item>\n            ))}\n          </List>\n        </Segment>\n      )\n    }\n\n    return (\n      <Message>\n        <Message.Header>There is no editors yet</Message.Header>\n        <p>Click add button and create some new</p>\n      </Message>\n    )\n  }\n\n  if (isPending) {\n    return <Loader text='Loading editors...' />\n  }\n\n  if (error !== '') {\n    return <ErrorMessage error={error} />\n  }\n\n  return (\n    <Container className='list-container'>\n      <Segment className='list-container__header' clearing={true} basic={true}>\n        <Link\n          to='/editor'\n          onClick={() => {\n            dispatch(panelActions.clear())\n            dispatch(codeEditorActions.clear())\n          }}\n        >\n          <Button\n            floated='right'\n            icon='add'\n            content='Add CP'\n            primary={true}\n            basic={true}\n          />\n        </Link>\n        <h1>Editors</h1>\n      </Segment>\n\n      {renderList()}\n      <Pagination onLoad={handleLoad} />\n    </Container>\n  )\n}\n","import React, { ReactElement, ReactNode } from 'react'\nimport { Button, Container, Icon, Popup } from 'semantic-ui-react'\nimport './index.css'\n\ninterface IPageWrapperProps {\n  children: ReactNode\n}\n\nexport const PageWrapper = ({ children }: IPageWrapperProps): ReactElement => (\n  <div className='page-wrapper'>\n    <header>\n      <Container>\n        <span className='logo'>\n          <Icon name='setting' />\n          Module\n        </span>\n        <Popup\n          on='click'\n          trigger={<Icon className='user' name='user circle' size='big' />}\n          content={\n            <Button.Group vertical={true} basic={true}>\n              <a href='/personalArea/1'>\n                <Button icon='id card' content='Profile' />\n              </a>\n              <a href='/signout'>\n                <Button icon='logout' content='Logout' />\n              </a>\n            </Button.Group>\n          }\n          position='bottom right'\n        />\n      </Container>\n    </header>\n\n    <main>{children}</main>\n  </div>\n)\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { ReactElement, ReactNode, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Container, List, Segment } from 'semantic-ui-react'\nimport { ErrorMessage } from '../../shared/components/ErrorMessage'\nimport { Loader } from '../../shared/components/Loader'\nimport { IApplicationDTO } from '../../shared/types/IApplicationDTO'\nimport { IRootState } from '../../store/state'\nimport { editorsActions } from '../Editors/actions'\nimport { Pagination } from '../Pagination'\nimport { panelActions } from '../Panel/actions'\n\nexport const Panels = (): ReactElement => {\n  const { list, isPending, error } = useSelector(\n    (state: IRootState) => state.editors,\n  )\n\n  const { user_id } = useParams()\n\n  const dispatch = useDispatch()\n\n  const handleLoad = useCallback(\n    (params?: { currentPage: number }) =>\n      dispatch(editorsActions.loadData(params)),\n    [dispatch],\n  )\n\n  useEffect(() => {\n    handleLoad()\n    dispatch(panelActions.clear())\n  }, [dispatch, handleLoad])\n\n  const renderList = (): ReactNode => {\n    if (list.length) {\n      return (\n        <Segment>\n          <List\n            divided={true}\n            verticalAlign='middle'\n            size='big'\n            animated={true}\n            selection={true}\n          >\n            {list.map((item: IApplicationDTO) => (\n              <List.Item key={item._id}>\n                <Link to={`/panel/${item._id}/${user_id}`}>\n                  <List.Header>{item.name}</List.Header>\n                </Link>\n              </List.Item>\n            ))}\n          </List>\n        </Segment>\n      )\n    }\n\n    return null\n  }\n\n  if (isPending) {\n    return <Loader text='Loading panels...' />\n  }\n\n  if (error !== '') {\n    return <ErrorMessage error={error} />\n  }\n\n  return (\n    <Container className='list-container'>\n      <Segment className='list-container__header' clearing={true} basic={true}>\n        <h1>Configuration Panels</h1>\n      </Segment>\n\n      {renderList()}\n      <Pagination onLoad={handleLoad} />\n    </Container>\n  )\n}\n","import React, { ReactElement } from 'react'\r\nimport NotificationSystem from 'react-notification-system'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport { Editor } from './Editor'\r\nimport { Editors } from './Editors'\r\nimport { PageWrapper } from './PageWrapper'\r\nimport { Panel } from './Panel'\r\nimport { Panels } from './Panels'\r\n\r\nexport const notificationSystem = React.createRef<any>()\r\n\r\nexport const App = (): ReactElement => (\r\n  <BrowserRouter basename='/configuration_module/'>\r\n    <NotificationSystem ref={notificationSystem} />\r\n    <Route path='/editor/:_id?'>\r\n      <Editor />\r\n    </Route>\r\n    <Route path='/editors'>\r\n      <PageWrapper>\r\n        <Editors />\r\n      </PageWrapper>\r\n    </Route>\r\n    <Route path='/panel/:application_id/:user_id'>\r\n      <PageWrapper>\r\n        <Panel online={true} />\r\n      </PageWrapper>\r\n    </Route>\r\n    <Route path='/panels/:user_id'>\r\n      <PageWrapper>\r\n        <Panels />\r\n      </PageWrapper>\r\n    </Route>\r\n  </BrowserRouter>\r\n)\r\n","export const serverEntryPoint = '/api/configuration_module/'\n","/* eslint-disable no-console */\nimport axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios'\nimport { serverEntryPoint } from '../shared/constants/serverEntryPoint'\nimport { RequestsEnum } from '../shared/enums/RequestsEnum'\nimport { Entity } from '../shared/types/Entity'\nimport { notificationSystem } from '../app/app'\n\nexport abstract class AbstractClient {\n  public entity: Entity\n  public URL: string\n  public axios = axios.create({ timeout: 20000 })\n\n  public abstract add: (...args: any) => any\n  public abstract update: (...args: any) => any\n  public abstract delete: (...args: any) => any\n  public abstract getItem: (...args: any) => any\n  public abstract getItems: (...args: any) => any\n\n  public constructor(entity: Entity) {\n    this.entity = entity\n    this.URL = `${serverEntryPoint}${this.entity}`\n  }\n\n  public helper = (\n    request: RequestsEnum,\n    data: {\n      _id?: string\n      body?: any\n    } = {},\n    params: {\n      [key: string]: any\n    } = {},\n  ): AxiosRequestConfig => {\n    switch (request) {\n      case RequestsEnum.add:\n        return {\n          url: `${this.URL}/item`,\n          method: 'POST',\n          data: data.body,\n        }\n      case RequestsEnum.update:\n        return {\n          url: `${this.URL}/item/${data._id}`,\n          method: 'PUT',\n          data: data.body,\n        }\n      case RequestsEnum.delete:\n        return {\n          url: `${this.URL}/item/${data._id}`,\n          method: 'DELETE',\n        }\n      case RequestsEnum.getItem:\n        return {\n          url: `${this.URL}/item/${data._id}`,\n          method: 'GET',\n        }\n      case RequestsEnum.getItems:\n        return {\n          url: `${this.URL}/items/`,\n          method: 'GET',\n          params: { ...params },\n        }\n      default:\n        return {} as AxiosRequestConfig\n    }\n  }\n\n  public errorHandler = (error: AxiosError): AxiosResponse | AxiosError => {\n    // Error 😨\n    if (error.response) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      console.log(error.response.data)\n      console.log(error.response.status)\n      console.log(error.response.headers)\n      return error.response\n    }\n\n    if (error.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      console.log(error.request)\n      notificationSystem.current.addNotification({\n        position: 'tc',\n        message: error.message,\n        level: 'error',\n      })\n      return {\n        data: {\n          error: error.message,\n        },\n      } as AxiosResponse\n    }\n    // Something happened in setting up the request and triggered an Error\n    console.log('Error', error.message)\n\n    return error\n  }\n}\n","import axios, { AxiosResponse, AxiosError } from 'axios'\nimport { RequestsEnum } from '../shared/enums/RequestsEnum'\nimport { IApplicationDTO } from '../shared/types/IApplicationDTO'\nimport { AbstractClient } from './AbstractClient'\n\nexport class ApplicationsClient extends AbstractClient {\n  constructor() {\n    super('applications')\n  }\n\n  public add = async (\n    body: IApplicationDTO,\n  ): Promise<AxiosResponse | AxiosError> => {\n    try {\n      return await axios(this.helper(RequestsEnum.add, { body }))\n    } catch (error) {\n      return this.errorHandler(error)\n    }\n  }\n\n  public update = async (\n    data: IApplicationDTO,\n  ): Promise<AxiosResponse | AxiosError> => {\n    const { _id, ...body } = data\n\n    try {\n      return await this.axios(this.helper(RequestsEnum.update, { _id, body }))\n    } catch (error) {\n      return this.errorHandler(error)\n    }\n  }\n\n  public delete = async (_id: string): Promise<AxiosResponse | AxiosError> => {\n    try {\n      return await this.axios(this.helper(RequestsEnum.delete, { _id }))\n    } catch (error) {\n      return this.errorHandler(error)\n    }\n  }\n\n  public getItem = async (_id: string): Promise<AxiosResponse | AxiosError> => {\n    try {\n      return await this.axios(this.helper(RequestsEnum.getItem, { _id }))\n    } catch (error) {\n      return this.errorHandler(error)\n    }\n  }\n\n  public getItems = async (params?: {\n    currentPage: number\n  }): Promise<AxiosResponse | AxiosError> => {\n    try {\n      return await this.axios(this.helper(RequestsEnum.getItems, {}, params))\n    } catch (error) {\n      return this.errorHandler(error)\n    }\n  }\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { safeSagaExecute } from '../../middleware/saga';\nimport { ApplicationsClient } from '../../services/ApplicationsClient';\nimport { IApplicationDTO } from '../../shared/types/IApplicationDTO';\nimport { IActionPayloaded } from '../../store/IAction';\nimport { notificationSystem } from '../app';\nimport { codeEditorActions } from '../CodeEditor/actions';\nimport {\n\teditorModalActions,\n\tEDITOR_MODAL_ADD,\n\tEDITOR_MODAL_UPDATE,\n} from './actions';\n\nconst client = new ApplicationsClient();\n\nexport class EditorModalApiSaga {\n\tpublic constructor() {\n\t\tthis.add = this.add.bind(this);\n\t\tthis.update = this.update.bind(this);\n\t}\n\n\tpublic static Initialize() {\n\t\tconst saga = new EditorModalApiSaga();\n\t\treturn saga.watch();\n\t}\n\n\tpublic *watch() {\n\t\tyield takeEvery(EDITOR_MODAL_ADD, (a) => safeSagaExecute(a, this.add));\n\t\tyield takeEvery(EDITOR_MODAL_UPDATE, (a) =>\n\t\t\tsafeSagaExecute(a, this.update),\n\t\t);\n\t}\n\n\tprivate *add(action: IActionPayloaded<IApplicationDTO>) {\n\t\tyield put(editorModalActions.setPending({ flag: true }));\n\n\t\tconst response = yield client.add(action.payload);\n\n\t\tyield put(editorModalActions.setPending({ flag: false }));\n\n\t\tif (response.status === 200) {\n\t\t\tyield put(editorModalActions.closeModal());\n\t\t\twindow.location.href = `/configuration_module/editor/${response.data._id}`;\n\t\t} else {\n\t\t\tyield put(editorModalActions.failure(response.data.error));\n\t\t}\n\t}\n\n\tprivate *update(action: IActionPayloaded<IApplicationDTO>) {\n\t\tyield put(editorModalActions.setPending({ flag: true }));\n\n\t\tconst response = yield client.update(action.payload);\n\n\t\tyield put(editorModalActions.setPending({ flag: false }));\n\n\t\tif (response.status === 200) {\n\t\t\tyield put(\n\t\t\t\tcodeEditorActions.dataLoaded({\n\t\t\t\t\tname: response.data.item.name,\n\t\t\t\t\tdescriptionCode: response.data.item.descriptionCode,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tyield put(editorModalActions.closeModal());\n\n\t\t\tnotificationSystem.current.addNotification({\n\t\t\t\tmessage: 'Updated successfully!',\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tc',\n\t\t\t});\n\t\t} else {\n\t\t\tyield put(editorModalActions.failure(response.data.error));\n\t\t}\n\t}\n}\n","import { put, takeEvery } from 'redux-saga/effects'\nimport { safeSagaExecute } from '../../middleware/saga'\nimport { ApplicationsClient } from '../../services/ApplicationsClient'\nimport { IActionPayloaded } from '../../store/IAction'\nimport { codeEditorActions, CODE_EDITOR_LOAD_DATA } from './actions'\nimport { formatCode } from '../../shared/functions/formatCode'\nimport { panelActions } from '../Panel/actions'\n\nconst client = new ApplicationsClient()\n\nexport class CodeEditorApiSaga {\n  public constructor() {\n    this.load = this.load.bind(this)\n  }\n\n  public static Initialize() {\n    const saga = new CodeEditorApiSaga()\n    return saga.watch()\n  }\n\n  public *watch() {\n    yield takeEvery(CODE_EDITOR_LOAD_DATA, a => safeSagaExecute(a, this.load))\n  }\n\n  private *load(action: IActionPayloaded<{ _id: string }>) {\n    yield put(codeEditorActions.setPending({ flag: true }))\n\n    const response = yield client.getItem(action.payload._id)\n\n    if ((response).status === 200) {\n      if (response.data === null) {\n        yield put(\n          codeEditorActions.failure({\n            error: \"This CP doesn't exist\",\n          }),\n        )\n      } else {\n        yield put(\n          codeEditorActions.dataLoaded({\n            name: response.data.item.name,\n            descriptionCode: formatCode(response.data.item.descriptionCode),\n          }),\n        )\n        yield put(\n          panelActions.init({\n            descriptionCode: response.data.item.descriptionCode,\n          }),\n        )\n      }\n    }\n\n    yield put(codeEditorActions.setPending({ flag: false }))\n  }\n}\n","import { put, takeEvery } from 'redux-saga/effects'\nimport { safeSagaExecute } from '../../middleware/saga'\nimport { ApplicationsClient } from '../../services/ApplicationsClient'\nimport { IActionPayloaded } from '../../store/IAction'\nimport { paginationActions } from '../Pagination/actions'\nimport { editorsActions, EDITORS_DELETE, EDITORS_LOAD_DATA } from './actions'\n\nconst client = new ApplicationsClient()\n\nexport class EditorsApiSaga {\n  public constructor() {\n    this.load = this.load.bind(this)\n    this.delete = this.delete.bind(this)\n  }\n\n  public static Initialize() {\n    const saga = new EditorsApiSaga()\n    return saga.watch()\n  }\n\n  public *watch() {\n    yield takeEvery(EDITORS_LOAD_DATA, a => safeSagaExecute(a, this.load))\n    yield takeEvery(EDITORS_DELETE, a => safeSagaExecute(a, this.delete))\n  }\n\n  private *load(action?: IActionPayloaded<{ currentPage: number }>) {\n    yield put(editorsActions.setPending({ flag: true }))\n\n    const response = yield client.getItems((action || {}).payload)\n\n    if (response.status === 200) {\n      yield put(editorsActions.dataLoaded({ list: response.data.items }))\n      yield put(\n        paginationActions.init({\n          totalPages: response.data.totalPages,\n          currentPage: response.data.currentPage,\n        }),\n      )\n    } else {\n      yield put(editorsActions.failure({ error: response.data.error }))\n    }\n\n    yield put(editorsActions.setPending({ flag: false }))\n  }\n\n  private *delete(action: IActionPayloaded<{ _id: string }>) {\n    yield put(editorsActions.setPending({ flag: true }))\n\n    const response = yield client.delete(action.payload._id)\n\n    if (response.status === 200) {\n      yield put(editorsActions.dataLoaded({ list: response.data.items }))\n      yield put(\n        paginationActions.init({\n          totalPages: response.data.totalPages,\n          currentPage: 1,\n        }),\n      )\n    } else {\n      yield put(editorsActions.failure({ error: response.data.error }))\n    }\n\n    yield put(editorsActions.setPending({ flag: false }))\n  }\n}\n","/* eslint-disable arrow-parens */\n/* eslint-disable @typescript-eslint/unbound-method */\n/* eslint-disable @typescript-eslint/no-magic-numbers */\nimport objectAssignDeep from 'object-assign-deep'\nimport { delay, put, select, takeEvery } from 'redux-saga/effects'\nimport { safeSagaExecute } from '../../middleware/saga'\nimport { SettingsClient } from '../../services/SettingsClient'\nimport { ISettingDTO } from '../../shared/types/ISettingDTO'\nimport { IActionPayloaded } from '../../store/IAction'\nimport { IRootState } from '../../store/state'\nimport {\n  panelActions,\n  PANEL_INIT,\n  PANEL_LOAD_DATA,\n  PANEL_UPDATE_DATA,\n} from './actions'\nimport { IPanelState } from './state'\n\nconst client = new SettingsClient()\n\nexport class PanelApiSaga {\n  public constructor() {\n    this.load = this.load.bind(this)\n    this.update = this.update.bind(this)\n    this.validate = this.validate.bind(this)\n  }\n\n  public static Initialize(): Generator {\n    const saga = new PanelApiSaga()\n    return saga.watch()\n  }\n\n  public *watch(): Generator {\n    yield takeEvery(PANEL_LOAD_DATA, (a) => safeSagaExecute(a, this.load))\n    yield takeEvery(PANEL_UPDATE_DATA, (a) => safeSagaExecute(a, this.update))\n    yield takeEvery(PANEL_INIT, (a) => safeSagaExecute(a, this.validate))\n  }\n\n  private *load(\n    action: IActionPayloaded<{ application_id: string; user_id: string }>,\n  ): Generator {\n    const settings: any = yield select((state: IRootState) => state.panel)\n\n    yield put(panelActions.setPending({ flag: true }))\n\n    const response: any = yield client.getItem(action.payload)\n\n    if (response.status === 200) {\n      if (response.data === null) {\n        yield put(\n          panelActions.failure({ error: \"Requested panel doesn't exist\" }),\n        )\n      } else {\n        yield put(\n          panelActions.init({\n            online: true,\n            descriptionCode: response.data.item.descriptionCode,\n            _id: response.data.item._id,\n            name: response.data.item.name,\n            settings: objectAssignDeep(\n              settings.settings,\n              response.data.item.settings,\n            ),\n            currentPage: Object.keys(response.data.item.settings.pages)[0],\n          } as Partial<IPanelState>),\n        )\n      }\n    } else {\n      yield put(panelActions.failure({ error: response.data.error }))\n    }\n\n    yield put(panelActions.setPending({ flag: false }))\n  }\n\n  private *update(action: IActionPayloaded<ISettingDTO>): Generator {\n    yield client.update(action.payload)\n  }\n\n  private *validate(action: IActionPayloaded<Partial<IPanelState>>): Generator {\n    const { descriptionCode } = action.payload\n\n    if (!RegExp('<App>((.|\\\\s)*)</App>').test(String(descriptionCode))) {\n      yield put(\n        panelActions.setRenderError({\n          error: 'Render error: There is no App component.',\n        }),\n      )\n    } else if (\n      !RegExp('<App>(\\\\s*)((<Page(.*)>(.|\\\\s)*</Page>)+)(\\\\s*)</App>').test(\n        String(descriptionCode),\n      )\n    ) {\n      yield put(\n        panelActions.setRenderError({\n          error: 'Render error: At least one page must be presented.',\n        }),\n      )\n    } else {\n      yield put(panelActions.validated(action.payload))\n\n      yield put(panelActions.setPending({ flag: true }))\n\n      yield delay(500)\n      yield put(panelActions.setPending({ flag: false }))\n    }\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios'\nimport { IPanelSettingsDTO } from '../shared/types/IPanelSettingsDTO'\nimport { ISettingDTO } from '../shared/types/ISettingDTO'\nimport { AbstractClient } from './AbstractClient'\n\nexport class SettingsClient extends AbstractClient {\n  constructor() {\n    super('settings')\n  }\n\n  public getItem = async ({\n    application_id,\n    user_id,\n  }: {\n    application_id: string\n    user_id: string\n  }): Promise<AxiosResponse<IPanelSettingsDTO> | AxiosError> => {\n    try {\n      return await this.axios.get(\n        `${this.URL}/item/${application_id}/${user_id}`,\n      )\n    } catch (error) {\n      return this.errorHandler(error)\n    }\n  }\n\n  public getItems = async () => {}\n\n  public add = async () => {}\n\n  public update = async (data: ISettingDTO) => {\n    try {\n      return await this.axios.put(\n        `${this.URL}/item/${data.application_id}/${data.user_id}`,\n        {\n          settings: data.common\n            ? {\n                common: {\n                  [data.name]: {\n                    params: {\n                      [data.param]: {\n                        value: data.value,\n                      },\n                    },\n                  },\n                },\n              }\n            : {\n                pages: {\n                  [data.page]: {\n                    [data.name]: {\n                      params: {\n                        [data.param]: {\n                          value: data.value,\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n        },\n      )\n    } catch (error) {\n      return this.errorHandler(error)\n    }\n  }\n\n  public delete = async () => {}\n}\n","import { all } from 'redux-saga/effects'\r\nimport { EditorModalApiSaga } from '../app/EditorModal/saga'\r\nimport { CodeEditorApiSaga } from '../app/CodeEditor/saga'\r\nimport { EditorsApiSaga } from '../app/Editors/saga'\r\nimport { PanelApiSaga } from '../app/Panel/saga'\r\n\r\nexport const rootSaga = function* root() {\r\n  yield all([\r\n    EditorModalApiSaga.Initialize(),\r\n    CodeEditorApiSaga.Initialize(),\r\n    EditorsApiSaga.Initialize(),\r\n    PanelApiSaga.Initialize(),\r\n  ])\r\n}\r\n\r\nexport function* safeSagaExecute(action: any, func: (a: any) => any) {\r\n  try {\r\n    yield func(action)\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n","export const codeExample = `\n\t<App>\n\t\t<Page name='Home page'>\n\t\t\t<Header>\n\t\t\t\t<ArrowButton name='Prev' direction='left' floated='left' />\n\t\t\t\t<ArrowButton name='Next' direction='right' floated='right' />\n\t\t\t</Header>\n\t\t\t<Content>\n\t\t\t\t<Grid columns={1} divided>\n\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t</Grid>\n\t\t\t</Content>\n\t\t\t<Footer>\n\t\t\t\t<ProgressBar name='Progress bar' />\n\t\t\t</Footer>\n\t\t</Page>\n\n\t\t<Page name='Friends'>\n\t\t\t<Header>\n\t\t\t\t<ProgressBar name='Progress bar' />\n\t\t\t</Header>\n\t\t\t<Content>\n\t\t\t\t<List selection verticalAlign='middle'>\n\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t<Image avatar src='https://react.semantic-ui.com/images/wireframe/image.png' />\n\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t<List.Header>Helen</List.Header>\n\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t</List.Item>\n\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t<Image avatar src='https://react.semantic-ui.com/images/wireframe/image.png' />\n\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t<List.Header>Christian</List.Header>\n\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t</List.Item>\n\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t<Image avatar src='https://react.semantic-ui.com/images/wireframe/image.png' />\n\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t<List.Header>Daniel</List.Header>\n\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t</List.Item>\n\t\t\t\t</List>\n\t\t\t</Content>\n\t\t\t<Footer secondary></Footer>\n\t\t</Page>\n\t</App>\n`\n","import { codeExample } from '../../shared/constants/codeExample'\nimport { IActionPayloaded } from '../../store/IAction'\nimport { IReducerPayloaded } from '../../store/IReducer'\nimport {\n  CODE_EDITOR_CHANGE_CODE,\n  CODE_EDITOR_CHANGE_HEIGHT,\n  CODE_EDITOR_CLEAR,\n  CODE_EDITOR_DATA_LOADED,\n  CODE_EDITOR_SET_PENDING,\n  CODE_EDITOR_FAILURE,\n} from './actions'\nimport { ICodeEditorState } from './state'\nimport { formatCode } from '../../shared/functions/formatCode'\nimport { Controlled as CodeMirror } from 'react-codemirror2'\n\nconst initialState: ICodeEditorState = {\n  name: '',\n  code: formatCode(codeExample),\n  height: '60vh',\n  isPending: false,\n  error: '',\n}\n\nexport class CodeEditorReducer implements IReducerPayloaded<ICodeEditorState> {\n  constructor() {\n    this.reduce = this.reduce.bind(this)\n  }\n\n  public static Create(): any {\n    const reducer = new CodeEditorReducer()\n    return reducer.reduce\n  }\n\n  public reduce(\n    state: ICodeEditorState = initialState,\n    action: IActionPayloaded<any>,\n  ): ICodeEditorState {\n    let newState = { ...state }\n\n    switch (action.type) {\n      case CODE_EDITOR_CHANGE_CODE:\n        newState.code = action.payload.code\n        break\n      case CODE_EDITOR_CHANGE_HEIGHT:\n        newState.height = action.payload.height\n        break\n      case CODE_EDITOR_SET_PENDING:\n        newState.isPending = action.payload.flag\n        break\n      case CODE_EDITOR_DATA_LOADED:\n        newState.name = action.payload.name\n        newState.code = action.payload.descriptionCode\n        break\n      case CODE_EDITOR_FAILURE:\n        newState.error = action.payload.error\n        break\n      case CODE_EDITOR_CLEAR:\n        newState = { ...initialState }\n        break\n    }\n\n    return newState\n  }\n}\n","/* eslint-disable @typescript-eslint/unbound-method */\nimport { IActionPayloaded } from '../../store/IAction'\nimport { IReducerPayloaded } from '../../store/IReducer'\nimport { IEditorModalState } from './state'\nimport {\n  EDITOR_MODAL_OPEN_MODAL,\n  EDITOR_MODAL_CLOSE_MODAL,\n  EDITOR_MODAL_FAILURE,\n  EDITOR_MODAL_SET_PENDING,\n  EDITOR_MODAL_CHANGE_NAME,\n} from './actions'\n\nconst initialState: IEditorModalState = {\n  name: '',\n  isOpened: false,\n  isPending: false,\n  error: {\n    msg: '',\n    errors: [],\n  },\n}\n\nexport class EditorModalReducer\n  implements IReducerPayloaded<IEditorModalState> {\n  constructor() {\n    this.reduce = this.reduce.bind(this)\n  }\n\n  public static Create(): any {\n    const reducer = new EditorModalReducer()\n    return reducer.reduce\n  }\n\n  public reduce(\n    state: IEditorModalState = initialState,\n    action: IActionPayloaded<any>,\n  ): IEditorModalState {\n    let newState = { ...state }\n\n    switch (action.type) {\n      case EDITOR_MODAL_OPEN_MODAL:\n        newState.isOpened = true\n        newState.name = String(action.payload)\n        break\n      case EDITOR_MODAL_CLOSE_MODAL:\n        newState = { ...initialState }\n        break\n      case EDITOR_MODAL_CHANGE_NAME:\n        newState.name = action.payload.name\n        break\n      case EDITOR_MODAL_SET_PENDING:\n        newState.isPending = action.payload.flag\n        break\n      case EDITOR_MODAL_FAILURE:\n        newState.error = { ...action.payload }\n        break\n    }\n\n    return newState\n  }\n}\n","/* eslint-disable @typescript-eslint/unbound-method */\nimport { IActionPayloaded } from '../../store/IAction'\nimport { IReducerPayloaded } from '../../store/IReducer'\nimport { IEditorsState } from './state'\nimport {\n  EDITORS_DATA_LOADED,\n  EDITORS_SET_PENDING,\n  EDITORS_FAILURE,\n} from './actions'\n\nconst initialState: IEditorsState = {\n  list: [],\n  isPending: true,\n  error: '',\n}\n\nexport class EditorsReducer implements IReducerPayloaded<IEditorsState> {\n  constructor() {\n    this.reduce = this.reduce.bind(this)\n  }\n\n  public static Create(): any {\n    const reducer = new EditorsReducer()\n    return reducer.reduce\n  }\n\n  public reduce(\n    state: IEditorsState = initialState,\n    action: IActionPayloaded<any>,\n  ): IEditorsState {\n    const newState = { ...state }\n\n    switch (action.type) {\n      case EDITORS_DATA_LOADED:\n        newState.list = [...action.payload.list]\n        newState.error = ''\n        break\n      case EDITORS_SET_PENDING:\n        newState.isPending = action.payload.flag\n        break\n      case EDITORS_FAILURE:\n        newState.error = action.payload.error\n        break\n    }\n\n    return newState\n  }\n}\n","import { IHowToState } from './state'\nimport { IActionPayloaded } from '../../store/IAction'\nimport { IReducerPayloaded } from '../../store/IReducer'\nimport { HOW_TO_OPEN, HOW_TO_CLOSE } from './actions'\n\nconst initialState: IHowToState = {\n  isOpened: false,\n}\n\nexport class HowToReducer implements IReducerPayloaded<IHowToState> {\n  constructor() {\n    this.reduce = this.reduce.bind(this)\n  }\n\n  public static Create(): any {\n    const reducer = new HowToReducer()\n    return reducer.reduce\n  }\n\n  public reduce(\n    state: IHowToState = initialState,\n    action: IActionPayloaded<any>,\n  ): IHowToState {\n    const newState = { ...state }\n\n    switch (action.type) {\n      case HOW_TO_OPEN:\n        newState.isOpened = true\n        break\n      case HOW_TO_CLOSE:\n        newState.isOpened = false\n        break\n    }\n\n    return newState\n  }\n}\n","/* eslint-disable @typescript-eslint/unbound-method */\nimport { IActionPayloaded } from '../../store/IAction'\nimport { IReducerPayloaded } from '../../store/IReducer'\nimport { IPaginationState } from './state'\nimport { PAGINATION_INIT, PAGINATION_SET_CURRENT_PAGE } from './actions'\n\nconst initialState: IPaginationState = {\n  totalPages: 0,\n  currentPage: 1,\n}\n\nexport class PaginationReducer implements IReducerPayloaded<IPaginationState> {\n  constructor() {\n    this.reduce = this.reduce.bind(this)\n  }\n\n  public static Create(): any {\n    const reducer = new PaginationReducer()\n    return reducer.reduce\n  }\n\n  public reduce(\n    state: IPaginationState = initialState,\n    action: IActionPayloaded<any>,\n  ): IPaginationState {\n    let newState = { ...state }\n\n    switch (action.type) {\n      case PAGINATION_INIT:\n        newState = { ...newState, ...action.payload }\n        break\n      case PAGINATION_SET_CURRENT_PAGE:\n        newState.currentPage = action.payload.currentPage\n        break\n    }\n\n    return newState\n  }\n}\n","/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable arrow-parens */\n/* eslint-disable @typescript-eslint/no-magic-numbers */\n/* eslint-disable @typescript-eslint/unbound-method */\nimport objectAssignDeep from 'object-assign-deep';\nimport { colors } from '../../shared/constants/colors';\nimport { sizes } from '../../shared/constants/sizes';\nimport { ConfigurationElements } from '../../shared/enums/ConfigurationElements';\nimport { IOption } from '../../shared/types/IOption';\nimport { IActionPayloaded } from '../../store/IAction';\nimport { IReducerPayloaded } from '../../store/IReducer';\nimport {\n\tPANEL_CLEAR,\n\tPANEL_FAILURE,\n\tPANEL_INIT_COMPONENT,\n\tPANEL_INIT_PAGE,\n\tPANEL_SET_CURRENT_PAGE,\n\tPANEL_SET_FIELD_VALUE,\n\tPANEL_SET_FOCUSED_FIELD,\n\tPANEL_SET_MODE,\n\tPANEL_SET_PENDING,\n\tPANEL_SET_RENDER_ERROR,\n\tPANEL_VALIDATED,\n} from './actions';\nimport { IPanelState } from './state';\n\nconst createInitialState = (): any => ({\n\tisInitialized: false,\n\tname: '',\n\tonline: false,\n\tcurrentPage: null,\n\trenderError: '',\n\tsettings: {\n\t\tpages: {},\n\t\tcommon: {},\n\t},\n\tfocusedField: undefined,\n\tdescriptionCode: '',\n\terror: '',\n\tisPending: false,\n});\n\n// генерация настроек по умолчанию\nconst getDefaultSettings = (\n\ttype: ConfigurationElements,\n\toptions: IOption[],\n): any => {\n\tswitch (type) {\n\t\tcase ConfigurationElements.optional:\n\t\t\treturn false;\n\t\tcase ConfigurationElements.select:\n\t\t\treturn options[0].value;\n\t\tcase ConfigurationElements.color:\n\t\t\treturn colors[0].value;\n\t\tcase ConfigurationElements.size:\n\t\t\treturn sizes[3].value;\n\t}\n};\n\nexport class PanelReducer implements IReducerPayloaded<IPanelState> {\n\tconstructor() {\n\t\tthis.reduce = this.reduce.bind(this);\n\t}\n\n\tpublic static Create(): any {\n\t\tconst reducer = new PanelReducer();\n\t\treturn reducer.reduce;\n\t}\n\n\tpublic reduce(\n\t\tstate: IPanelState = createInitialState(),\n\t\taction: IActionPayloaded<any>,\n\t): IPanelState {\n\t\tlet newState = { ...state };\n\n\t\tswitch (action.type) {\n\t\t\tcase PANEL_VALIDATED:\n\t\t\t\tnewState = objectAssignDeep(\n\t\t\t\t\t{},\n\t\t\t\t\tcreateInitialState(),\n\t\t\t\t\taction.payload,\n\t\t\t\t);\n\t\t\t\tnewState.isInitialized = true;\n\t\t\t\tbreak;\n\n\t\t\tcase PANEL_INIT_PAGE:\n\t\t\t\tif (!newState.settings.pages[action.payload.name]) {\n\t\t\t\t\tnewState.settings.pages[action.payload.name] = {};\n\t\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\t\tnewState.currentPage = Object.keys(\n\t\t\t\t\t\tnewState.settings.pages,\n\t\t\t\t\t)[0];\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase PANEL_INIT_COMPONENT:\n\t\t\t\tif (!newState.settings.common[action.payload.name]) {\n\t\t\t\t\tnewState.settings.common[action.payload.name] = {\n\t\t\t\t\t\tparams: {},\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tObject.keys(action.payload.params).forEach((paramKey) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!newState.settings.common[action.payload.name].params[\n\t\t\t\t\t\t\tparamKey\n\t\t\t\t\t\t]\n\t\t\t\t\t) {\n\t\t\t\t\t\tnewState.settings.common[action.payload.name].params[\n\t\t\t\t\t\t\tparamKey\n\t\t\t\t\t\t] = {\n\t\t\t\t\t\t\tvalue: getDefaultSettings(\n\t\t\t\t\t\t\t\taction.payload.params[paramKey].type,\n\t\t\t\t\t\t\t\taction.payload.params[paramKey].options,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (\n\t\t\t\t\t!newState.settings.pages[action.payload.page][\n\t\t\t\t\t\taction.payload.name\n\t\t\t\t\t]\n\t\t\t\t) {\n\t\t\t\t\tnewState.settings.pages[action.payload.page][\n\t\t\t\t\t\taction.payload.name\n\t\t\t\t\t] = {\n\t\t\t\t\t\tparams: {},\n\t\t\t\t\t\tcommon: action.payload.common,\n\t\t\t\t\t};\n\n\t\t\t\t\tObject.keys(action.payload.params).forEach((paramKey) => {\n\t\t\t\t\t\tnewState.settings.pages[action.payload.page][\n\t\t\t\t\t\t\taction.payload.name\n\t\t\t\t\t\t].params[paramKey] = {\n\t\t\t\t\t\t\tvalue: action.payload.common\n\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t: getDefaultSettings(\n\t\t\t\t\t\t\t\t\t\taction.payload.params[paramKey].type,\n\t\t\t\t\t\t\t\t\t\taction.payload.params[paramKey].options,\n\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\ttype: action.payload.params[paramKey].type,\n\t\t\t\t\t\t\toptions: action.payload.params[paramKey].options,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase PANEL_SET_CURRENT_PAGE:\n\t\t\t\tnewState.currentPage = action.payload.name;\n\t\t\t\tbreak;\n\n\t\t\tcase PANEL_CLEAR:\n\t\t\t\tnewState = createInitialState();\n\t\t\t\tbreak;\n\n\t\t\tcase PANEL_SET_FIELD_VALUE:\n\t\t\t\tif (action.payload.common) {\n\t\t\t\t\tnewState.settings.common[action.payload.name].params[\n\t\t\t\t\t\taction.payload.param\n\t\t\t\t\t].value = action.payload.value;\n\t\t\t\t} else {\n\t\t\t\t\tnewState.settings.pages[action.payload.page][\n\t\t\t\t\t\taction.payload.name\n\t\t\t\t\t].params[action.payload.param].value = action.payload.value;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase PANEL_SET_FOCUSED_FIELD:\n\t\t\t\tnewState.focusedField = action.payload.name;\n\t\t\t\tbreak;\n\n\t\t\tcase PANEL_SET_MODE:\n\t\t\t\tnewState.online = action.payload.online;\n\t\t\t\tbreak;\n\n\t\t\tcase PANEL_SET_RENDER_ERROR:\n\t\t\t\tnewState.renderError = action.payload.error;\n\t\t\t\tbreak;\n\t\t\tcase PANEL_SET_PENDING:\n\t\t\t\tnewState.isPending = action.payload.flag;\n\t\t\t\tbreak;\n\t\t\tcase PANEL_FAILURE:\n\t\t\t\tnewState.error = action.payload.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn newState;\n\t}\n}\n","import { combineReducers } from 'redux'\r\nimport { CodeEditorReducer } from '../app/CodeEditor/reducer'\r\nimport { EditorModalReducer } from '../app/EditorModal/reducer'\r\nimport { EditorsReducer } from '../app/Editors/reducer'\r\nimport { HowToReducer } from '../app/HowTo/reducer'\r\nimport { PaginationReducer } from '../app/Pagination/reducer'\r\nimport { PanelReducer } from '../app/Panel/reducer'\r\nimport { IRootState } from './state'\r\n\r\nexport const rootReducer = combineReducers<IRootState>({\r\n  pagination: PaginationReducer.Create(),\r\n  panel: PanelReducer.Create(),\r\n  editorModal: EditorModalReducer.Create(),\r\n  codeEditor: CodeEditorReducer.Create(),\r\n  editors: EditorsReducer.Create(),\r\n  howTo: HowToReducer.Create(),\r\n})\r\n","import * as React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css'\nimport { App } from './app/app'\nimport { configureStore } from './store/store'\nimport './styles/index.css'\n\nconst store = configureStore()\nconst rootElement = document.getElementById('root')\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n","import { applyMiddleware, compose, createStore, Store } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootSaga } from '../middleware/saga'\r\nimport { rootReducer } from './reducer'\r\nimport { IRootState } from './state'\r\n\r\nexport function configureStore(initialState?: IRootState): Store {\r\n  const sagaMiddleware = createSagaMiddleware()\r\n\r\n  const middlewares = [sagaMiddleware]\r\n  const enhancer = compose(applyMiddleware(...middlewares))\r\n\r\n  const store = createStore(rootReducer, initialState, enhancer)\r\n  sagaMiddleware.run(rootSaga)\r\n\r\n  return store\r\n}\r\n"],"sourceRoot":""}